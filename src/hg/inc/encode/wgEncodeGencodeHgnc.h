/* wgEncodeGencodeHgnc.h was originally generated by the autoSql program, which also 
 * generated wgEncodeGencodeHgnc.c and wgEncodeGencodeHgnc.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef WGENCODEGENCODEHGNC_H
#define WGENCODEGENCODEHGNC_H

#define WGENCODEGENCODEHGNC_NUM_COLS 2

extern char *wgEncodeGencodeHgncCommaSepFieldNames;

struct wgEncodeGencodeHgnc
/* GENCODE transcript to HUGO Gene Nomenclature Committee (HGNC) gene symbolic name */
    {
    struct wgEncodeGencodeHgnc *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *symbol;	/* HGNC gene symbol */
    };

void wgEncodeGencodeHgncStaticLoad(char **row, struct wgEncodeGencodeHgnc *ret);
/* Load a row from wgEncodeGencodeHgnc table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct wgEncodeGencodeHgnc *wgEncodeGencodeHgncLoad(char **row);
/* Load a wgEncodeGencodeHgnc from row fetched with select * from wgEncodeGencodeHgnc
 * from database.  Dispose of this with wgEncodeGencodeHgncFree(). */

struct wgEncodeGencodeHgnc *wgEncodeGencodeHgncLoadAll(char *fileName);
/* Load all wgEncodeGencodeHgnc from whitespace-separated file.
 * Dispose of this with wgEncodeGencodeHgncFreeList(). */

struct wgEncodeGencodeHgnc *wgEncodeGencodeHgncLoadAllByChar(char *fileName, char chopper);
/* Load all wgEncodeGencodeHgnc from chopper separated file.
 * Dispose of this with wgEncodeGencodeHgncFreeList(). */

#define wgEncodeGencodeHgncLoadAllByTab(a) wgEncodeGencodeHgncLoadAllByChar(a, '\t');
/* Load all wgEncodeGencodeHgnc from tab separated file.
 * Dispose of this with wgEncodeGencodeHgncFreeList(). */

struct wgEncodeGencodeHgnc *wgEncodeGencodeHgncCommaIn(char **pS, struct wgEncodeGencodeHgnc *ret);
/* Create a wgEncodeGencodeHgnc out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new wgEncodeGencodeHgnc */

void wgEncodeGencodeHgncFree(struct wgEncodeGencodeHgnc **pEl);
/* Free a single dynamically allocated wgEncodeGencodeHgnc such as created
 * with wgEncodeGencodeHgncLoad(). */

void wgEncodeGencodeHgncFreeList(struct wgEncodeGencodeHgnc **pList);
/* Free a list of dynamically allocated wgEncodeGencodeHgnc's */

void wgEncodeGencodeHgncOutput(struct wgEncodeGencodeHgnc *el, FILE *f, char sep, char lastSep);
/* Print out wgEncodeGencodeHgnc.  Separate fields with sep. Follow last field with lastSep. */

#define wgEncodeGencodeHgncTabOut(el,f) wgEncodeGencodeHgncOutput(el,f,'\t','\n');
/* Print out wgEncodeGencodeHgnc as a line in a tab-separated file. */

#define wgEncodeGencodeHgncCommaOut(el,f) wgEncodeGencodeHgncOutput(el,f,',',',');
/* Print out wgEncodeGencodeHgnc as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* WGENCODEGENCODEHGNC_H */

