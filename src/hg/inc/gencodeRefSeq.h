/* gencodeRefSeq.h was originally generated by the autoSql program, which also 
 * generated gencodeRefSeq.c and gencodeRefSeq.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODEREFSEQ_H
#define GENCODEREFSEQ_H

#define GENCODEREFSEQ_NUM_COLS 3

extern char *gencodeRefSeqCommaSepFieldNames;

struct gencodeRefSeq
/* GENCODE transcript to RefSeq mRNA or non-coding RNA and peptide accession mapping */
    {
    struct gencodeRefSeq *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *rnaAcc;	/* RefSeq mRNA or non-coding RNA accession */
    char *pepAcc;	/* RefSeq peptide identifier for coding accession */
    };

void gencodeRefSeqStaticLoad(char **row, struct gencodeRefSeq *ret);
/* Load a row from gencodeRefSeq table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeRefSeq *gencodeRefSeqLoad(char **row);
/* Load a gencodeRefSeq from row fetched with select * from gencodeRefSeq
 * from database.  Dispose of this with gencodeRefSeqFree(). */

struct gencodeRefSeq *gencodeRefSeqLoadAll(char *fileName);
/* Load all gencodeRefSeq from whitespace-separated file.
 * Dispose of this with gencodeRefSeqFreeList(). */

struct gencodeRefSeq *gencodeRefSeqLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeRefSeq from chopper separated file.
 * Dispose of this with gencodeRefSeqFreeList(). */

#define gencodeRefSeqLoadAllByTab(a) gencodeRefSeqLoadAllByChar(a, '\t');
/* Load all gencodeRefSeq from tab separated file.
 * Dispose of this with gencodeRefSeqFreeList(). */

struct gencodeRefSeq *gencodeRefSeqCommaIn(char **pS, struct gencodeRefSeq *ret);
/* Create a gencodeRefSeq out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeRefSeq */

void gencodeRefSeqFree(struct gencodeRefSeq **pEl);
/* Free a single dynamically allocated gencodeRefSeq such as created
 * with gencodeRefSeqLoad(). */

void gencodeRefSeqFreeList(struct gencodeRefSeq **pList);
/* Free a list of dynamically allocated gencodeRefSeq's */

void gencodeRefSeqOutput(struct gencodeRefSeq *el, FILE *f, char sep, char lastSep);
/* Print out gencodeRefSeq.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeRefSeqTabOut(el,f) gencodeRefSeqOutput(el,f,'\t','\n');
/* Print out gencodeRefSeq as a line in a tab-separated file. */

#define gencodeRefSeqCommaOut(el,f) gencodeRefSeqOutput(el,f,',',',');
/* Print out gencodeRefSeq as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODEREFSEQ_H */

