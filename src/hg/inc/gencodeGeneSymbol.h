/* gencodeGeneSymbol.h was originally generated by the autoSql program, which also 
 * generated gencodeGeneSymbol.c and gencodeGeneSymbol.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef GENCODEGENESYMBOL_H
#define GENCODEGENESYMBOL_H

#define GENCODEGENESYMBOL_NUM_COLS 3

extern char *gencodeGeneSymbolCommaSepFieldNames;

struct gencodeGeneSymbol
/* GENCODE transcript to official gene symbol.  For human, this is the HUGO Gene Nomenclature Committee (HGNC) gene symbo.  For mouse, this is the Mouse Genome Informatics (MGI) gene symbol. */
    {
    struct gencodeGeneSymbol *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *symbol;	/* HGNC/MGI gene symbol */
    char *geneId;	/* HGNC/MGI symbol id used by database */
    };

void gencodeGeneSymbolStaticLoad(char **row, struct gencodeGeneSymbol *ret);
/* Load a row from gencodeGeneSymbol table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct gencodeGeneSymbol *gencodeGeneSymbolLoad(char **row);
/* Load a gencodeGeneSymbol from row fetched with select * from gencodeGeneSymbol
 * from database.  Dispose of this with gencodeGeneSymbolFree(). */

struct gencodeGeneSymbol *gencodeGeneSymbolLoadAll(char *fileName);
/* Load all gencodeGeneSymbol from whitespace-separated file.
 * Dispose of this with gencodeGeneSymbolFreeList(). */

struct gencodeGeneSymbol *gencodeGeneSymbolLoadAllByChar(char *fileName, char chopper);
/* Load all gencodeGeneSymbol from chopper separated file.
 * Dispose of this with gencodeGeneSymbolFreeList(). */

#define gencodeGeneSymbolLoadAllByTab(a) gencodeGeneSymbolLoadAllByChar(a, '\t');
/* Load all gencodeGeneSymbol from tab separated file.
 * Dispose of this with gencodeGeneSymbolFreeList(). */

struct gencodeGeneSymbol *gencodeGeneSymbolCommaIn(char **pS, struct gencodeGeneSymbol *ret);
/* Create a gencodeGeneSymbol out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new gencodeGeneSymbol */

void gencodeGeneSymbolFree(struct gencodeGeneSymbol **pEl);
/* Free a single dynamically allocated gencodeGeneSymbol such as created
 * with gencodeGeneSymbolLoad(). */

void gencodeGeneSymbolFreeList(struct gencodeGeneSymbol **pList);
/* Free a list of dynamically allocated gencodeGeneSymbol's */

void gencodeGeneSymbolOutput(struct gencodeGeneSymbol *el, FILE *f, char sep, char lastSep);
/* Print out gencodeGeneSymbol.  Separate fields with sep. Follow last field with lastSep. */

#define gencodeGeneSymbolTabOut(el,f) gencodeGeneSymbolOutput(el,f,'\t','\n');
/* Print out gencodeGeneSymbol as a line in a tab-separated file. */

#define gencodeGeneSymbolCommaOut(el,f) gencodeGeneSymbolOutput(el,f,',',',');
/* Print out gencodeGeneSymbol as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* GENCODEGENESYMBOL_H */

