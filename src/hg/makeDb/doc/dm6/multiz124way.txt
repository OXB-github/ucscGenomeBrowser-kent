#############################################################################
## 124-Way Multiz (WORKING - 2018-11-14 - Hiram)
    ssh hgwdev
    mkdir /hive/data/genomes/dm6/bed/multiz124way
    cd /hive/data/genomes/dm6/bed/multiz124way

    # after much list mangling, produced this 124way file from
    # a combination of local alignments on dm6 and the AWS alignments

    # using TreeGraph2 tree editor on the Mac, rearrange to get dm6
    # at the top, and attempt to get the others in phylo order:
    /cluster/bin/phast/all_dists 124way.nh | grep dm6 \
        | sed -e "s/dm6.//" | sort -k2n | sed -e 's/^/#\t/;'
#       GCF_002780465.1 0.300000
#       droMir2 0.300000
#       droGri2 0.400000
#       droMoj3 0.400000
#       GCF_001654015.1 0.500000
#       droEre2 0.500000
#       droAna3 0.600000
#       droPer1 0.600000
#       GCA_001014495.1 0.800000
#       droPse3 0.800000
#       droSec1 0.800000
#       GCA_003123925.1 0.900000
#       GCF_000347755.3 0.900000
#       GCF_000789215.1 0.900000
#       droSim2 0.900000
#       GCA_000695345.1 1.000000
#       GCA_001017275.1 1.000000
#       GCA_002749795.1 1.000000
#       GCF_001015335.1 1.000000
#       musDom2 1.000000
#       GCA_000265325.1 1.100000
#       GCA_001017455.1 1.100000
#       GCA_001047195.1 1.100000
#       GCA_001735545.1 1.100000
#       GCF_001188975.1 1.100000
#       droVir3 1.100000
#       GCA_000262795.1 1.200000
#       GCA_001014835.1 1.200000
#       GCA_001014945.1 1.200000
#       GCF_000699065.1 1.200000
#       GCF_001853355.1 1.200000
#       GCF_002204515.2 1.200000
#       droYak3 1.200000
#       GCA_000688735.1 1.300000
#       GCA_000786525.1 1.300000
#       GCA_001014515.1 1.300000
#       GCA_001014935.1 1.300000
#       GCA_001077435.1 1.300000
#       GCA_002237135.1 1.300000
#       GCA_003185025.1 1.300000
#       GCF_000806345.1 1.300000
#       GCF_001876365.2 1.300000
#       triCas2 1.300000
#       GCA_000688715.1 1.400000
#       GCA_001014505.1 1.400000
#       GCA_001014815.1 1.400000
#       GCA_001015235.1 1.400000
#       GCF_000209185.1 1.400000
#       GCF_001687245.1 1.400000
#       droWil2 1.400000
#       GCA_000671755.1 1.500000
#       GCA_000775305.1 1.500000
#       GCA_001014335.1 1.500000
#       GCA_001014845.1 1.500000
#       GCA_001017515.1 1.500000
#       GCA_900005825.1 1.500000
#       GCA_900258525.2 1.500000
#       GCF_001654025.1 1.500000
#       GCA_000349125.2 1.600000
#       GCA_000818775.1 1.600000
#       GCA_001014525.1 1.600000
#       GCA_001014575.1 1.600000
#       GCA_001014665.1 1.600000
#       GCA_001015115.1 1.600000
#       GCF_002093755.1 1.600000
#       anoGam3 1.600000
#       GCA_000349145.1 1.700000
#       GCA_000671735.1 1.700000
#       GCA_001017535.1 1.700000
#       GCF_002217835.1 1.700000
#       GCA_000149185.1 1.800000
#       GCA_000349185.1 1.800000
#       GCA_001014895.1 1.800000
#       droAlb1 1.800000
#       GCA_000341915.2 1.900000
#       GCA_000956275.1 1.900000
#       GCA_001015175.1 1.900000
#       GCA_003055125.1 1.900000
#       droSuz1 1.900000
#       GCA_000473845.2 2.000000
#       GCA_001015145.1 2.000000
#       droEug2 2.000000
#       GCA_000956255.1 2.100000
#       GCA_001014875.1 2.100000
#       droTak2 2.100000
#       GCA_003448975.1 2.200000
#       GCF_001277935.1 2.200000
#       apiMel4 2.200000
#       GCA_000473525.2 2.300000
#       GCA_001014675.1 2.300000
#       droEle2 2.300000
#       GCA_000349065.1 2.400000
#       GCA_001015075.1 2.400000
#       droFic2 2.400000
#       GCA_000473505.1 2.500000
#       GCA_001014425.1 2.500000
#       droKik2 2.500000
#       GCA_001015215.1 2.600000
#       GCA_001245395.1 2.600000
#       GCA_001932985.1 2.600000
#       GCA_002846955.1 2.600000
#       GCA_000349165.1 2.700000
#       GCA_003086615.1 2.700000
#       GCA_000211455.3 2.800000
#       droBip2 2.800000
#       GCA_000956215.1 2.900000
#       GCA_002222885.1 2.900000
#       GCA_000349085.1 3.000000
#       GCA_003285875.1 3.000000
#       GCA_000473445.2 3.100000
#       droBia2 3.100000
#       GCA_002091835.1 3.200000
#       droRho2 3.200000
#       GCA_000441895.2 3.300000
#       GCA_003285725.1 3.300000
#       GCA_000349025.1 3.400000
#       GCA_001014415.1 3.400000
#       GCA_001752445.1 3.400000
#       GCA_002091845.1 3.500000
#       GCA_000473375.1 3.600000
#       GCA_000439205.1 3.700000
#       GCA_000150765.1 3.800000
#       GCA_000349105.1 3.800000


    #########################################################################
    # It appears that tree is not correct when compared to the featureBits
    # measurements of the alignments:
#query  chain   synTen  rBest   chainSyn rBest  total
#                               hours   hours   hours

    #	the tree after adjusting dm6 to the top looks like:
    cat dm6.124way.nh | xargs echo | sed -e 's/ //g;' | fold -w 77
((((((((((((dm6:0.1,((((((((((((((((((((((((((((((((GCA_001014415.1:0.1,GCA_0
01752445.1:0.1):0.1,GCA_003285725.1:0.1):0.1,droRho2:0.1):0.1,droBia2:0.1):0.
1,GCA_003285875.1:0.1):0.1,GCA_002222885.1:0.1):0.1,droBip2:0.1):0.1,GCA_0030
86615.1:0.1):0.1,GCA_001245395.1:0.1):0.1,droKik2:0.1):0.1,droFic2:0.1):0.1,d
roEle2:0.1):0.1,GCF_001277935.1:0.1):0.1,droTak2:0.1):0.1,droEug2:0.1):0.1,dr
oSuz1:0.1):0.1,droAlb1:0.1):0.1,GCF_002217835.1:0.1):0.1,GCF_002093755.1:0.1)
:0.1,GCF_001654025.1:0.1):0.1,droWil2:0.1):0.1,GCA_003185025.1:0.1):0.1,droYa
k3:0.1):0.1,droVir3:0.1):0.1,GCA_002749795.1:0.1):0.1,droSim2:0.1):0.1,droSec
1:0.1):0.1,(droPse3:0.1,GCA_001014495.1:0.1):0.1):0.1,droPer1:0.1):0.1,GCF_00
1654015.1:0.1):0.1,droMoj3:0.1):0.1,droMir2:0.1):0.1):0.1,GCF_002780465.1:0.1
):0.1,droGri2:0.1):0.1,droEre2:0.1):0.1,droAna3:0.1):0.1,(((((((((((((((apiMe
l4:0.1,(((GCA_001014425.1:0.1,(GCA_001932985.1:0.1,GCA_001015215.1:0.1):0.1):
0.1,GCA_001015075.1:0.1):0.1,GCA_001014675.1:0.1):0.1):0.1,GCA_001014875.1:0.
1):0.1,GCA_001015145.1:0.1):0.1,GCA_003055125.1:0.1):0.1,GCA_001014895.1:0.1)
:0.1,GCA_001017535.1:0.1):0.1,GCA_001014575.1:0.1):0.1,GCA_001014845.1:0.1):0
.1,GCA_001014815.1:0.1):0.1,GCA_001014935.1:0.1):0.1,(((GCA_001014335.1:0.1,G
CA_900258525.2:0.1):0.1,GCA_001015235.1:0.1):0.1,GCA_002237135.1:0.1):0.1):0.
1,((((((((GCA_001015175.1:0.1,GCA_000341915.2:0.1):0.1,GCA_000149185.1:0.1):0
.1,GCA_000671735.1:0.1):0.1,GCA_000818775.1:0.1):0.1,GCA_000671755.1:0.1):0.1
,GCA_000688715.1:0.1):0.1,GCA_000688735.1:0.1):0.1,(GCA_001077435.1:0.1,GCA_0
01014515.1:0.1):0.1):0.1):0.1,(GCA_001047195.1:0.1,GCA_001017455.1:0.1):0.1):
0.1,((GCA_001735545.1:0.1,(GCA_001014835.1:0.1,GCF_000699065.1:0.1):0.1):0.1,
GCA_001017275.1:0.1):0.1):0.1,((GCF_001015335.1:0.1,musDom2:0.1):0.1,GCA_0031
23925.1:0.1):0.1):0.1):0.1,((((((((GCA_001014665.1:0.1,GCA_001015115.1:0.1):0
.1,GCA_001017515.1:0.1):0.1,GCF_001687245.1:0.1):0.1,GCF_000806345.1:0.1):0.1
,GCF_001853355.1:0.1):0.1,GCF_001188975.1:0.1):0.1,GCA_000695345.1:0.1):0.1,G
CF_000789215.1:0.1):0.1):0.1,GCF_000347755.3:0.1:0.1):0.1,((GCA_001014945.1:0
.1,GCA_000262795.1:0.1):0.1,GCA_000265325.1:0.1):0.1):0.1,(((GCF_000209185.1:
0.1,((((((((((((((((((((((((GCA_000150765.1:0.1,GCA_000349105.1:0.1):0.1,GCA_
000439205.1:0.1):0.1,GCA_000473375.1:0.1):0.1,GCA_002091845.1:0.1):0.1,GCA_00
0349025.1:0.1):0.1,GCA_000441895.2:0.1):0.1,GCA_002091835.1:0.1):0.1,GCA_0004
73445.2:0.1):0.1,GCA_000349085.1:0.1):0.1,GCA_000956215.1:0.1):0.1,GCA_000211
455.3:0.1):0.1,GCA_000349165.1:0.1):0.1,GCA_002846955.1:0.1):0.1,GCA_00047350
5.1:0.1):0.1,GCA_000349065.1:0.1):0.1,GCA_000473525.2:0.1):0.1,GCA_003448975.
1:0.1):0.1,GCA_000956255.1:0.1):0.1,GCA_000473845.2:0.1):0.1,GCA_000956275.1:
0.1):0.1,GCA_000349185.1:0.1):0.1,GCA_000349145.1:0.1):0.1,GCA_000349125.2:0.
1):0.1,(anoGam3:0.1,GCA_001014525.1:0.1):0.1):0.1):0.1,GCF_001876365.2:0.1):0
.1,GCF_002204515.2:0.1):0.1):0.1,(((GCA_900005825.1:0.1,GCA_000775305.1:0.1):
0.1,GCA_001014505.1:0.1):0.1,GCA_000786525.1:0.1):0.1):0.1,triCas2:0.1);
    # extract species list from that .nh file
    sed 's/[a-z][a-z]*_//g; s/:[0-9\.][0-9\.]*//g; s/;//; /^ *$/d' \
        dm6.124way.nh | xargs echo | sed 's/ //g; s/,/ /g' \
        | sed 's/[()]//g; s/,/ /g' | tr '[ ]' '[\n]' > species.list.txt

    # translating the GC* accession names to more useful species
    # names:
cat dm6.124way.nh | sed -e 's/(/(\n/g; s/,/,\n/g; s/)/\n)/g; s/ //g;' \
  | grep -v "^$" | ~/kent/src/hg/utils/phyloTrees/binaryTree.pl -nameTranslate=dbName.to.sciName.txt -noInternal -lineOutput /dev/stdin
# noInternal: TRUE
# defaultDistance: 0.100000
# nameTranslate from: dbName.to.sciName.txt
# lineOutput 'TRUE'
# verbose: 0
((((((((((((dm6:0.1,
           ((((((((((((((((((((((((((((((((Phortica_variegata:0.1,
                                           Zaprionus_indianus:0.1):0.1,
                                          Scaptodrosophila_lebanonensis:0.1):0.1,
                                         droRho2:0.1):0.1,
                                        droBia2:0.1):0.1,
                                       D_novamexicana:0.1):0.1,
                                      D_nasuta:0.1):0.1,
                                     droBip2:0.1):0.1,
                                    D_montana:0.1):0.1,
                                   D_americana:0.1):0.1,
                                  droKik2:0.1):0.1,
                                 droFic2:0.1):0.1,
                                droEle2:0.1):0.1,
                               D_busckii:0.1):0.1,
                              droTak2:0.1):0.1,
                             droEug2:0.1):0.1,
                            droSuz1:0.1):0.1,
                           droAlb1:0.1):0.1,
                          D_obscura:0.1):0.1,
                         D_serrata:0.1):0.1,
                        D_arizonae:0.1):0.1,
                       droWil2:0.1):0.1,
                      D_athabasca:0.1):0.1,
                     droYak3:0.1):0.1,
                    droVir3:0.1):0.1,
                   D_subobscura:0.1):0.1,
                  droSim2:0.1):0.1,
                 droSec1:0.1):0.1,
                (droPse3:0.1,
                 D_pseudoobscura_1:0.1):0.1):0.1,
               droPer1:0.1):0.1,
              D_navojoa:0.1):0.1,
             droMoj3:0.1):0.1,
            droMir2:0.1):0.1):0.1,
          D_hydei:0.1):0.1,
         droGri2:0.1):0.1,
        droEre2:0.1):0.1,
       droAna3:0.1):0.1,
      (((((((((((((((apiMel4:0.1,
                     (((Trichoceridae_BV-2014:0.1,
                        (Proctacanthus_coquilletti:0.1,
                         Holcocephala_fusca:0.1):0.1):0.1,
                       Cirrula_hians:0.1):0.1,
                      Ephydra_gracilis:0.1):0.1):0.1,
                    Condylostylus_patibulatus:0.1):0.1,
                   Eristalis_dimidiata:0.1):0.1,
                  Paykullia_maculata:0.1):0.1,
                 Hermetia_illucens:0.1):0.1,
                Tipula_oleracea:0.1):0.1,
               Themira_minor:0.1):0.1,
              Mochlonyx_cinctipes:0.1):0.1,
             Chaoborus_trivitattus:0.1):0.1,
            Liriomyza_trifolii:0.1):0.1,
           (((Coboldia_fuscipes:0.1,
              Culicoides_sonorensis:0.1):0.1,
             Sphyracephala_brevicornis:0.1):0.1,
            Teleopsis_dalmanni:0.1):0.1):0.1,
          ((((((((Megaselia_abdita:0.1,
                  Megaselia_scalaris:0.1):0.1,
                 Mayetiola_destructor:0.1):0.1,
                Glossina_fuscipes:0.1):0.1,
               Glossina_palpalis_gambiensis:0.1):0.1,
              Glossina_brevipalpis:0.1):0.1,
             Glossina_pallidipes:0.1):0.1,
            Glossina_austeni:0.1):0.1,
           (Glossina_morsitans_2:0.1,
            Glossina_morsitans_1:0.1):0.1):0.1):0.1,
         (Sarcophagidae_BV-2014:0.1,
          Neobellieria_bullata:0.1):0.1):0.1,
        ((Phormia_regina:0.1,
          (Lucilia_sericata:0.1,
           Lucilia_cuprina:0.1):0.1):0.1,
         Calliphora_vicina:0.1):0.1):0.1,
       ((Stomoxys_calcitrans:0.1,
         musDom2:0.1):0.1,
        Haematobia_irritans:0.1):0.1):0.1):0.1,
     ((((((((Trupanea_jonesi:0.1,
             Eutreta_diana:0.1):0.1,
            Tephritis_californica:0.1):0.1,
           Rhagoletis_zephyria:0.1):0.1,
          Zeugodacus_cucurbitae:0.1):0.1,
         Bactrocera_latifrons:0.1):0.1,
        Bactrocera_oleae:0.1):0.1,
       Bactrocera_tryoni:0.1):0.1,
      Bactrocera_dorsalis:0.1):0.1):0.1,
    Ceratitis_capitata:0.1):0.1,
   ((Clogmia_albipunctata:0.1,
     Phlebotomus_papatasi:0.1):0.1,
    Lutzomyia_longipalpis:0.1):0.1):0.1,
  (((Culex_quinquefasciatus:0.1,
     ((((((((((((((((((((((((A_coluzzii:0.1,
                             A_epiroticus:0.1):0.1,
                            A_nili:0.1):0.1,
                           A_culicifacies:0.1):0.1,
                          A_cracens:0.1):0.1,
                         A_minimus:0.1):0.1,
                        A_sinensis:0.1):0.1,
                       A_maculatus:0.1):0.1,
                      A_farauti:0.1):0.1,
                     A_funestus:0.1):0.1,
                    A_farauti_No4:0.1):0.1,
                   A_darlingi:0.1):0.1,
                  A_christyi:0.1):0.1,
                 A_aquasalis:0.1):0.1,
                A_atroparvus:0.1):0.1,
               A_quadriannulatus:0.1):0.1,
              A_melas:0.1):0.1,
             A_stephensi:0.1):0.1,
            A_punctulatus:0.1):0.1,
           A_merus:0.1):0.1,
          A_koliensis:0.1):0.1,
         A_arabiensis:0.1):0.1,
        A_dirus:0.1):0.1,
       A_albimanus:0.1):0.1,
      (anoGam3:0.1,
       A_gambiae_1:0.1):0.1):0.1):0.1,
    Aedes_albopictus:0.1):0.1,
   Aedes_aegypti:0.1):0.1):0.1,
 (((Clunio_marinus:0.1,
    Belgica_antarctica:0.1):0.1,
   Chironomus_riparius:0.1):0.1,
  Chironomus_tentans:0.1):0.1):0.1,
triCas2:0.1):0.1:0.1;


    # construct db to name translation list:
    grep "^[a-z]" species.list.txt | while read DB
do
hgsql -N -e "select name,organism from dbDb where name=\"${DB}\";" hgcentraltest
done | sed -e 's/-/_/g;' | sed -e "s/\t/->/; s/ /_/g;" | sed -e 's/$/;/' | sed -e 's/\./_/g' \
    | sed -e "s#'#_x_#g;" > db.to.name.txt

    grep "^[a-z]" species.list.txt | while read DB
do
hgsql -N -e "select name,organism from dbDb where name=\"${DB}\";" hgcentraltest
done | sed -e 's/-/_/g;' | sed -e "s/ /_/g;" | sed -e 's/\./_/g' \
    | sed -e "s#'#_x_#g;" > dbName.to.sciName.txt

    cat ../multiz122way/sciName.accession.tab \
  | awk -F$'\t' '{printf "%s->%s;\n", $2, $1}' \
    | sed -e 's/ /_/g; s/Anopheles/A_/; s/Drosophila/D_/;' >> db.to.name.txt

/cluster/bin/phast/tree_doctor --rename "`cat db.to.name.txt`" \
	dm6.124way.nh \
   | sed -e 's/0\+)/)/g; s/0\+,/,/g' \
     | $HOME/kent/src/hg/utils/phyloTrees/asciiTree.pl /dev/stdin \
       | sed -e "s#_x_#'#g;" > dm6.124way.commonNames.nh

    # verify names translate correctly, scan this output:
    sed -e 's/(//g; s/:.*//;' dm6.124way.commonNames.nh \
	| sed -e 's/ //g;' | sort | less

    cat dm6.124way.sciName.nh | sed -e 's/^/# /;'

# ((((((((((((D._melanogaster:0.1,
#            ((((((((((((((((((((((((((((((((Phortica_variegata:0.1,
#                                            Zaprionus_indianus:0.1):0.1,
#                                           Scaptodrosophila_lebanonensis:0.1):0.1,
#                                          D._rhopaloa:0.1):0.1,
#                                         D._biarmipes:0.1):0.1,
#                                        D._novamexicana:0.1):0.1,
#                                       D._nasuta:0.1):0.1,
#                                      D._bipectinata:0.1):0.1,
#                                     D._montana:0.1):0.1,
#                                    D._americana:0.1):0.1,
#                                   D._kikkawai:0.1):0.1,
#                                  D._ficusphila:0.1):0.1,
#                                 D._elegans:0.1):0.1,
#                                D._busckii:0.1):0.1,
#                               D._takahashii:0.1):0.1,
#                              D._eugracilis:0.1):0.1,
#                             D._suzukii:0.1):0.1,
#                            D._albomicans:0.1):0.1,
#                           D._obscura:0.1):0.1,
#                          D._serrata:0.1):0.1,
#                         D._arizonae:0.1):0.1,
#                        D._willistoni:0.1):0.1,
#                       D._athabasca:0.1):0.1,
#                      D._yakuba:0.1):0.1,
#                     D._virilis:0.1):0.1,
#                    D._subobscura:0.1):0.1,
#                   D._simulans:0.1):0.1,
#                  D._sechellia:0.1):0.1,
#                 (D._pseudoobscura:0.1,
#                  D._pseudoobscura:0.1):0.1):0.1,
#                D._persimilis:0.1):0.1,
#               D._navojoa:0.1):0.1,
#              D._mojavensis:0.1):0.1,
#             D._miranda:0.1):0.1):0.1,
#           D._hydei:0.1):0.1,
#          D._grimshawi:0.1):0.1,
#         D._erecta:0.1):0.1,
#        D._ananassae:0.1):0.1,
#       (((((((((((((((A._mellifera:0.1,
#                      (((Trichoceridae_sp._BV_2014:0.1,
#                         (Proctacanthus_coquilletti:0.1,
#                          Holcocephala_fusca:0.1):0.1):0.1,
#                        Cirrula_hians:0.1):0.1,
#                       Ephydra_gracilis:0.1):0.1):0.1,
#                     Condylostylus_patibulatus:0.1):0.1,
#                    Eristalis_dimidiata:0.1):0.1,
#                   Paykullia_maculata:0.1):0.1,
#                  Hermetia_illucens:0.1):0.1,
#                 Tipula_oleracea:0.1):0.1,
#                Themira_minor:0.1):0.1,
#               Mochlonyx_cinctipes:0.1):0.1,
#              Chaoborus_trivitattus:0.1):0.1,
#             Liriomyza_trifolii:0.1):0.1,
#            (((Coboldia_fuscipes:0.1,
#               Culicoides_sonorensis:0.1):0.1,
#              Sphyracephala_brevicornis:0.1):0.1,
#             Teleopsis_dalmanni:0.1):0.1):0.1,
#           ((((((((Megaselia_abdita:0.1,
#                   Megaselia_scalaris:0.1):0.1,
#                  Mayetiola_destructor:0.1):0.1,
#                 Glossina_fuscipes_fuscipes:0.1):0.1,
#                Glossina_palpalis_gambiensis:0.1):0.1,
#               Glossina_brevipalpis:0.1):0.1,
#              Glossina_pallidipes:0.1):0.1,
#             Glossina_austeni:0.1):0.1,
#            (Glossina_morsitans_morsitans:0.1,
#             Glossina_morsitans:0.1):0.1):0.1):0.1,
#          (Sarcophagidae_sp._BV_2014:0.1,
#           Neobellieria_bullata:0.1):0.1):0.1,
#         ((Phormia_regina:0.1,
#           (Lucilia_sericata:0.1,
#            Lucilia_cuprina:0.1):0.1):0.1,
#          Calliphora_vicina:0.1):0.1):0.1,
#        ((Stomoxys_calcitrans:0.1,
#          M._domestica:0.1):0.1,
#         Haematobia_irritans:0.1):0.1):0.1):0.1,
#      ((((((((Trupanea_jonesi:0.1,
#              Eutreta_diana:0.1):0.1,
#             Tephritis_californica:0.1):0.1,
#            Rhagoletis_zephyria:0.1):0.1,
#           Zeugodacus_cucurbitae:0.1):0.1,
#          Bactrocera_latifrons:0.1):0.1,
#         Bactrocera_oleae:0.1):0.1,
#        Bactrocera_tryoni:0.1):0.1,
#       Bactrocera_dorsalis:0.1):0.1):0.1,
#     Ceratitis_capitata:0.1):0.1,
#    ((Clogmia_albipunctata:0.1,
#      Phlebotomus_papatasi:0.1):0.1,
#     Lutzomyia_longipalpis:0.1):0.1):0.1,
#   (((Culex_quinquefasciatus:0.1,
#      ((((((((((((((((((((((((A._coluzzii:0.1,
#                              A._epiroticus:0.1):0.1,
#                             A._nili:0.1):0.1,
#                            A._culicifacies:0.1):0.1,
#                           A._cracens:0.1):0.1,
#                          A._minimus:0.1):0.1,
#                         A._sinensis:0.1):0.1,
#                        A._maculatus:0.1):0.1,
#                       A._farauti:0.1):0.1,
#                      A._funestus:0.1):0.1,
#                     A._farauti_No._4:0.1):0.1,
#                    A._darlingi:0.1):0.1,
#                   A._christyi:0.1):0.1,
#                  A._aquasalis:0.1):0.1,
#                 A._atroparvus:0.1):0.1,
#                A._quadriannulatus:0.1):0.1,
#               A._melas:0.1):0.1,
#              A._stephensi:0.1):0.1,
#             A._punctulatus:0.1):0.1,
#            A._merus:0.1):0.1,
#           A._koliensis:0.1):0.1,
#          A._arabiensis:0.1):0.1,
#         A._dirus:0.1):0.1,
#        A._albimanus:0.1):0.1,
#       (A._gambiae:0.1,
#        A._gambiae:0.1):0.1):0.1):0.1,
#     Aedes_albopictus:0.1):0.1,
#    Aedes_aegypti:0.1):0.1):0.1,
#  (((Clunio_marinus:0.1,
#     Belgica_antarctica:0.1):0.1,
#    Chironomus_riparius:0.1):0.1,
#   Chironomus_tentans:0.1):0.1):0.1,
# T._castaneum:0.1);

#	Use this specification in the phyloGif tool:
#	http://genome.ucsc.edu/cgi-bin/phyloGif
#	to obtain a png image for src/hg/htdocs/images/phylo/dm6_124way.png

    /cluster/bin/phast/all_dists dm6.124way.nh | grep dm6 \
        | sed -e "s/dm6.//" | sort -k2n > 124way.distances.txt
    #	Use this output to create the table below
    cat 124way.distances.txt | sed -e 's/^/# /;'
# GCF_002780465.1	0.300000
# droMir2	0.300000
# droGri2	0.400000
# droMoj3	0.400000
# GCF_001654015.1	0.500000
# droEre2	0.500000
# droAna3	0.600000
# droPer1	0.600000
# GCA_001014495.1	0.800000
# droPse3	0.800000
# droSec1	0.800000
# GCA_003123925.1	0.900000
# GCF_000347755.3	0.900000
# GCF_000789215.1	0.900000
# droSim2	0.900000
# GCA_000695345.1	1.000000
# GCA_001017275.1	1.000000
# GCA_002749795.1	1.000000
# GCF_001015335.1	1.000000
# musDom2	1.000000
# GCA_000265325.1	1.100000
# GCA_001017455.1	1.100000
# GCA_001047195.1	1.100000
# GCA_001735545.1	1.100000
# GCF_001188975.1	1.100000
# droVir3	1.100000
# GCA_000262795.1	1.200000
# GCA_001014835.1	1.200000
# GCA_001014945.1	1.200000
# GCF_000699065.1	1.200000
# GCF_001853355.1	1.200000
# GCF_002204515.2	1.200000
# droYak3	1.200000
# GCA_000688735.1	1.300000
# GCA_000786525.1	1.300000
# GCA_001014515.1	1.300000
# GCA_001014935.1	1.300000
# GCA_001077435.1	1.300000
# GCA_002237135.1	1.300000
# GCA_003185025.1	1.300000
# GCF_000806345.1	1.300000
# GCF_001876365.2	1.300000
# triCas2	1.300000
# GCA_000688715.1	1.400000
# GCA_001014505.1	1.400000
# GCA_001014815.1	1.400000
# GCA_001015235.1	1.400000
# GCF_000209185.1	1.400000
# GCF_001687245.1	1.400000
# droWil2	1.400000
# GCA_000671755.1	1.500000
# GCA_000775305.1	1.500000
# GCA_001014335.1	1.500000
# GCA_001014845.1	1.500000
# GCA_001017515.1	1.500000
# GCA_900005825.1	1.500000
# GCA_900258525.2	1.500000
# GCF_001654025.1	1.500000
# GCA_000349125.2	1.600000
# GCA_000818775.1	1.600000
# GCA_001014525.1	1.600000
# GCA_001014575.1	1.600000
# GCA_001014665.1	1.600000
# GCA_001015115.1	1.600000
# GCF_002093755.1	1.600000
# anoGam3	1.600000
# GCA_000349145.1	1.700000
# GCA_000671735.1	1.700000
# GCA_001017535.1	1.700000
# GCF_002217835.1	1.700000
# GCA_000149185.1	1.800000
# GCA_000349185.1	1.800000
# GCA_001014895.1	1.800000
# droAlb1	1.800000
# GCA_000341915.2	1.900000
# GCA_000956275.1	1.900000
# GCA_001015175.1	1.900000
# GCA_003055125.1	1.900000
# droSuz1	1.900000
# GCA_000473845.2	2.000000
# GCA_001015145.1	2.000000
# droEug2	2.000000
# GCA_000956255.1	2.100000
# GCA_001014875.1	2.100000
# droTak2	2.100000
# GCA_003448975.1	2.200000
# GCF_001277935.1	2.200000
# apiMel4	2.200000
# GCA_000473525.2	2.300000
# GCA_001014675.1	2.300000
# droEle2	2.300000
# GCA_000349065.1	2.400000
# GCA_001015075.1	2.400000
# droFic2	2.400000
# GCA_000473505.1	2.500000
# GCA_001014425.1	2.500000
# droKik2	2.500000
# GCA_001015215.1	2.600000
# GCA_001245395.1	2.600000
# GCA_001932985.1	2.600000
# GCA_002846955.1	2.600000
# GCA_000349165.1	2.700000
# GCA_003086615.1	2.700000
# GCA_000211455.3	2.800000
# droBip2	2.800000
# GCA_000956215.1	2.900000
# GCA_002222885.1	2.900000
# GCA_000349085.1	3.000000
# GCA_003285875.1	3.000000
# GCA_000473445.2	3.100000
# droBia2	3.100000
# GCA_002091835.1	3.200000
# droRho2	3.200000
# GCA_000441895.2	3.300000
# GCA_003285725.1	3.300000
# GCA_000349025.1	3.400000
# GCA_001014415.1	3.400000
# GCA_001752445.1	3.400000
# GCA_002091845.1	3.500000
# GCA_000473375.1	3.600000
# GCA_000439205.1	3.700000
# GCA_000150765.1	3.800000
# GCA_000349105.1	3.800000

    # this is a specialized sizeStats.pl from the usual kind

    cat > sizeStats.pl << '_EOF_'
#!/usr/bin/env perl

use strict;
use warnings;

my %dbToName;  # key is name from 124way.distances.txt, value is sciName

open (FH , "<dbName.to.sciName.txt") or die "can not read dbName.to.sciName.txt";
while (my $line = <FH>) {
  chomp $line;
  my ($db, $name) = split('\s+',$line);
  $name =~ s/__/. /;
  $dbToName{$db} = $name;
}
close (FH);

open (FH, "<124way.distances.txt") or
        die "can not read 124way.distances.txt";

my $count = 0;
while (my $line = <FH>) {
    chomp $line;
    my ($D, $dist) = split('\s+', $line);
    my $Db = ucfirst($D);
    my $chain = "chain" . ucfirst($D);
    my $B="/hive/data/genomes/dm6/bed/lastz.$D/fb.dm6." .
        $chain . "Link.txt";
    if ( $D =~ m/^G/) {
        $B=`ls /hive/data/genomes/dm6/bed/awsMultiz/lastzRun/lastz_$D/fb.dm6.chain.${D}*`;
        chomp $B;
    }
    my $chainLinkMeasure =
        `awk '{print \$5}' ${B} 2> /dev/null | sed -e "s/(//; s/)//"`;
    chomp $chainLinkMeasure;
    $chainLinkMeasure = 0.0 if (length($chainLinkMeasure) < 1);
    $chainLinkMeasure =~ s/\%//;
    my $chainSynMeasure = "";
    if ( $D =~ m/^G/) {
        $B=`ls /hive/data/genomes/dm6/bed/awsMultiz/lastzRun/lastz_$D/fb.dm6.chainSyn.${D}*`;
        chomp $B;
    } else {
        $B="/hive/data/genomes/dm6/bed/lastz.${D}/fb.dm6.chainSyn${Db}Link.txt";
    }
    $chainSynMeasure =
      `awk '{print \$5}' ${B} 2> /dev/null | sed -e "s/(//; s/)//"`;
    chomp $chainSynMeasure;
    $chainSynMeasure = 0.0 if (length($chainSynMeasure) < 1);
    $chainSynMeasure =~ s/\%//;
    my $chainRBestMeasure = "";
    if ( $D =~ m/^G/) {
        $B=`ls /hive/data/genomes/dm6/bed/awsMultiz/lastzRun/lastz_$D/fb.dm6.chainRBest.${D}*`;
        chomp $B;
    } else {
        $B="/hive/data/genomes/dm6/bed/lastz.${D}/fb.dm6.chainRBest.${Db}.txt";
    }
    $chainRBestMeasure =
      `awk '{print \$5}' ${B} 2> /dev/null | sed -e "s/(//; s/)//"`;
    chomp $chainRBestMeasure;
    $chainRBestMeasure = 0.0 if (length($chainRBestMeasure) < 1);
    $chainRBestMeasure =~ s/\%//;
    my $swapFile="/hive/data/genomes/${D}/bed/lastz.dm6/fb.${D}.chainGalGal6Link.txt";
    my $swapMeasure = "0";
    if ( -s $swapFile ) {
	$swapMeasure =
	    `awk '{print \$5}' ${swapFile} 2> /dev/null | sed -e "s/(//; s/)//"`;
	chomp $swapMeasure;
	$swapMeasure = 0.0 if (length($swapMeasure) < 1);
	$swapMeasure =~ s/\%//;
    }
    my $orgName=
    `hgsql -N -e "select organism from dbDb where name='$D';" hgcentraltest`;
    chomp $orgName;
    if (length($orgName) < 1) {
        if (defined($dbToName{$D})) {
          $orgName = $dbToName{$D};
        } else {
          $orgName="N/A";
        }
    }
    ++$count;
    my $percentAlike = 100.0 * ($chainLinkMeasure - $chainRBestMeasure) / $chainLinkMeasure;
    printf "# %03d %.4f (%% %06.3f) (%% %06.3f) (%% %06.3f) %5.2f - %s %s\n", $count, $dist,
        $chainLinkMeasure, $chainSynMeasure, $chainRBestMeasure, $percentAlike, $orgName, $D;
}
close (FH);
'_EOF_'
# << happy emacs

    chmod +x ./sizeStats.pl
    ./sizeStats.pl

#	If you can fill in all the numbers in this table, you are ready for
#	the multiple alignment procedure.

# the unlabeled column between rBestLink and sciName is the % ratio
# of recipBest to chainLink:
#    100.0 * (chainLink - rBestLink) / chainLink

#   N  dist  chainLink    synLink   rBestLink         sciName - accession/db
#   
# 001 0.3000 (% 45.605) (% 39.090) (% 43.146)  5.39 - D_hydei GCF_002780465.1
# 002 0.3000 (% 59.308) (% 52.207) (% 56.423)  4.86 - D. miranda droMir2
# 003 0.4000 (% 50.979) (% 39.157) (% 47.497)  6.83 - D. grimshawi droGri2
# 004 0.4000 (% 50.132) (% 38.715) (% 45.938)  8.37 - D. mojavensis droMoj3
# 005 0.5000 (% 36.286) (% 26.266) (% 33.214)  8.47 - D_navojoa GCF_001654015.1
# 006 0.5000 (% 80.023) (% 73.572) (% 75.414)  5.76 - D. erecta droEre2
# 007 0.6000 (% 67.282) (% 56.872) (% 63.291)  5.93 - D. ananassae droAna3
# 008 0.6000 (% 59.049) (% 50.601) (% 55.758)  5.57 - D. persimilis droPer1
# 009 0.8000 (% 49.001) (% 15.121) (% 46.014)  6.10 - D_pseudoobscura_1 GCA_001014495.1
# 010 0.8000 (% 59.836) (% 50.757) (% 56.761)  5.14 - D. pseudoobscura droPse3
# 011 0.8000 (% 82.561) (% 75.124) (% 77.243)  6.44 - D. sechellia droSec1
# 012 0.9000 (% 14.236) (% 00.398) (% 11.651) 18.16 - Haematobia_irritans GCA_003123925.1
# 013 0.9000 (% 19.997) (% 07.370) (% 17.255) 13.71 - Ceratitis_capitata GCF_000347755.3
# 014 0.9000 (% 19.222) (% 06.919) (% 16.309) 15.15 - Bactrocera_dorsalis GCF_000789215.1
# 015 0.9000 (% 82.570) (% 76.171) (% 77.512)  6.13 - D. simulans droSim2
# 016 1.0000 (% 19.523) (% 03.969) (% 16.269) 16.67 - Bactrocera_tryoni GCA_000695345.1
# 017 1.0000 (% 15.621) (% 00.349) (% 12.709) 18.64 - Calliphora_vicina GCA_001017275.1
# 018 1.0000 (% 55.249) (% 50.225) (% 53.549)  3.08 - D_subobscura GCA_002749795.1
# 019 1.0000 (% 18.152) (% 03.734) (% 15.680) 13.62 - Stomoxys_calcitrans GCF_001015335.1
# 020 1.0000 (% 19.278) (% 04.003) (% 16.469) 14.57 - M. domestica musDom2
# 021 1.1000 (% 10.883) (% 00.537) (% 08.780) 19.32 - Lutzomyia_longipalpis GCA_000265325.1
# 022 1.1000 (% 11.431) (% 00.074) (% 08.641) 24.41 - Neobellieria_bullata GCA_001017455.1
# 023 1.1000 (% 10.061) (% 00.053) (% 07.957) 20.91 - Sarcophagidae_BV-2014 GCA_001047195.1
# 024 1.1000 (% 20.199) (% 01.158) (% 17.347) 14.12 - Phormia_regina GCA_001735545.1
# 025 1.1000 (% 20.400) (% 06.304) (% 17.503) 14.20 - Bactrocera_oleae GCF_001188975.1
# 026 1.1000 (% 51.937) (% 40.274) (% 47.879)  7.81 - D. virilis droVir3
# 027 1.2000 (% 12.066) (% 00.301) (% 09.732) 19.34 - Phlebotomus_papatasi GCA_000262795.1
# 028 1.2000 (% 15.766) (% 00.519) (% 13.321) 15.51 - Lucilia_sericata GCA_001014835.1
# 029 1.2000 (% 12.098) (% 00.376) (% 09.885) 18.29 - Clogmia_albipunctata GCA_001014945.1
# 030 1.2000 (% 20.785) (% 05.586) (% 17.868) 14.03 - Lucilia_cuprina GCF_000699065.1
# 031 1.2000 (% 20.469) (% 07.177) (% 17.499) 14.51 - Bactrocera_latifrons GCF_001853355.1
# 032 1.2000 (% 14.028) (% 00.847) (% 11.508) 17.96 - Aedes_aegypti GCF_002204515.2
# 033 1.2000 (% 80.562) (% 72.649) (% 76.027)  5.63 - D. yakuba droYak3
# 034 1.3000 (% 16.948) (% 05.064) (% 14.848) 12.39 - Glossina_austeni GCA_000688735.1
# 035 1.3000 (% 09.943) (% 00.484) (% 08.534) 14.17 - Chironomus_tentans GCA_000786525.1
# 036 1.3000 (% 15.733) (% 01.238) (% 13.720) 12.79 - Glossina_morsitans_1 GCA_001014515.1
# 037 1.3000 (% 09.358) (% 00.017) (% 06.974) 25.48 - Liriomyza_trifolii GCA_001014935.1
# 038 1.3000 (% 16.954) (% 02.119) (% 14.867) 12.31 - Glossina_morsitans_2 GCA_001077435.1
# 039 1.3000 (% 23.293) (% 05.643) (% 20.375) 12.53 - Teleopsis_dalmanni GCA_002237135.1
# 040 1.3000 (% 54.625) (% 47.918) (% 52.193)  4.45 - D_athabasca GCA_003185025.1
# 041 1.3000 (% 20.252) (% 08.183) (% 17.366) 14.25 - Zeugodacus_cucurbitae GCF_000806345.1
# 042 1.3000 (% 15.172) (% 00.828) (% 12.700) 16.29 - Aedes_albopictus GCF_001876365.2
# 043 1.3000 (% 14.092) (% 00.480) (% 11.352) 19.44 - T. castaneum triCas2
# 044 1.4000 (% 17.101) (% 05.616) (% 14.994) 12.32 - Glossina_pallidipes GCA_000688715.1
# 045 1.4000 (% 09.683) (% 00.306) (% 08.276) 14.53 - Chironomus_riparius GCA_001014505.1
# 046 1.4000 (% 08.821) (% 00.076) (% 06.974) 20.94 - Chaoborus_trivitattus GCA_001014815.1
# 047 1.4000 (% 14.969) (% 00.369) (% 12.189) 18.57 - Sphyracephala_brevicornis GCA_001015235.1
# 048 1.4000 (% 13.421) (% 00.942) (% 10.997) 18.06 - Culex_quinquefasciatus GCF_000209185.1
# 049 1.4000 (% 21.196) (% 02.689) (% 17.814) 15.96 - Rhagoletis_zephyria GCF_001687245.1
# 050 1.4000 (% 51.432) (% 39.052) (% 48.544)  5.62 - D. willistoni droWil2
# 051 1.5000 (% 17.022) (% 05.521) (% 14.980) 12.00 - Glossina_brevipalpis GCA_000671755.1
# 052 1.5000 (% 10.737) (% 00.588) (% 09.031) 15.89 - Belgica_antarctica GCA_000775305.1
# 053 1.5000 (% 11.908) (% 00.797) (% 10.130) 14.93 - Coboldia_fuscipes GCA_001014335.1
# 054 1.5000 (% 11.607) (% 00.215) (% 09.594) 17.34 - Mochlonyx_cinctipes GCA_001014845.1
# 055 1.5000 (% 12.995) (% 00.067) (% 10.479) 19.36 - Tephritis_californica GCA_001017515.1
# 056 1.5000 (% 10.684) (% 00.770) (% 09.102) 14.81 - Clunio_marinus GCA_900005825.1
# 057 1.5000 (% 11.882) (% 00.497) (% 10.110) 14.91 - Culicoides_sonorensis GCA_900258525.2
# 058 1.5000 (% 41.792) (% 32.657) (% 39.023)  6.63 - D_arizonae GCF_001654025.1
# 059 1.6000 (% 11.850) (% 01.017) (% 09.826) 17.08 - A_albimanus GCA_000349125.2
# 060 1.6000 (% 16.827) (% 04.540) (% 14.770) 12.22 - Glossina_palpalis_gambiensis GCA_000818775.1
# 061 1.6000 (% 09.584) (% 00.236) (% 07.275) 24.09 - A_gambiae_1 GCA_001014525.1
# 062 1.6000 (% 14.206) (% 00.825) (% 11.274) 20.64 - Themira_minor GCA_001014575.1
# 063 1.6000 (% 07.450) (% 00.016) (% 05.115) 31.34 - Trupanea_jonesi GCA_001014665.1
# 064 1.6000 (% 11.427) (% 00.049) (% 09.111) 20.27 - Eutreta_diana GCA_001015115.1
# 065 1.6000 (% 70.419) (% 61.397) (% 67.226)  4.53 - D_serrata GCF_002093755.1
# 066 1.6000 (% 13.776) (% 01.160) (% 11.198) 18.71 - A. gambiae anoGam3
# 067 1.7000 (% 12.779) (% 01.099) (% 10.236) 19.90 - A_dirus GCA_000349145.1
# 068 1.7000 (% 17.078) (% 05.045) (% 15.036) 11.96 - Glossina_fuscipes GCA_000671735.1
# 069 1.7000 (% 08.632) (% 00.231) (% 06.961) 19.36 - Tipula_oleracea GCA_001017535.1
# 070 1.7000 (% 61.561) (% 54.854) (% 58.329)  5.25 - D_obscura GCF_002217835.1
# 071 1.8000 (% 10.512) (% 00.608) (% 08.836) 15.94 - Mayetiola_destructor GCA_000149185.1
# 072 1.8000 (% 12.738) (% 01.126) (% 10.298) 19.16 - A_arabiensis GCA_000349185.1
# 073 1.8000 (% 11.575) (% 00.049) (% 09.548) 17.51 - Hermetia_illucens GCA_001014895.1
# 074 1.8000 (% 44.544) (% 25.330) (% 41.368)  7.13 - D. albomicans droAlb1
# 075 1.9000 (% 08.143) (% 00.139) (% 06.166) 24.28 - Megaselia_scalaris GCA_000341915.2
# 076 1.9000 (% 10.841) (% 00.253) (% 08.787) 18.95 - A_koliensis GCA_000956275.1
# 077 1.9000 (% 13.126) (% 00.252) (% 10.704) 18.45 - Megaselia_abdita GCA_001015175.1
# 078 1.9000 (% 19.655) (% 00.858) (% 16.653) 15.27 - Paykullia_maculata GCA_003055125.1
# 079 1.9000 (% 74.591) (% 62.728) (% 70.682)  5.24 - D. suzukii droSuz1
# 080 2.0000 (% 12.901) (% 01.016) (% 10.341) 19.84 - A_merus GCA_000473845.2
# 081 2.0000 (% 09.259) (% 00.058) (% 07.114) 23.17 - Eristalis_dimidiata GCA_001015145.1
# 082 2.0000 (% 75.265) (% 70.366) (% 71.832)  4.56 - D. eugracilis droEug2
# 083 2.1000 (% 10.686) (% 00.327) (% 08.649) 19.06 - A_punctulatus GCA_000956255.1
# 084 2.1000 (% 08.158) (% 00.024) (% 06.304) 22.73 - Condylostylus_patibulatus GCA_001014875.1
# 085 2.1000 (% 75.507) (% 69.227) (% 71.728)  5.00 - D. takahashii droTak2
# 086 2.2000 (% 11.913) (% 01.049) (% 09.642) 19.06 - A_stephensi GCA_003448975.1
# 087 2.2000 (% 42.220) (% 31.758) (% 39.285)  6.95 - D_busckii GCF_001277935.1
# 088 2.2000 (% 08.183) (% 00.407) (% 06.697) 18.16 - A. mellifera apiMel4
# 089 2.3000 (% 12.182) (% 00.468) (% 09.870) 18.98 - A_melas GCA_000473525.2
# 090 2.3000 (% 16.643) (% 00.911) (% 14.428) 13.31 - Ephydra_gracilis GCA_001014675.1
# 091 2.3000 (% 75.445) (% 69.103) (% 71.767)  4.88 - D. elegans droEle2
# 092 2.4000 (% 12.514) (% 01.057) (% 10.160) 18.81 - A_quadriannulatus GCA_000349065.1
# 093 2.4000 (% 12.751) (% 00.125) (% 10.072) 21.01 - Cirrula_hians GCA_001015075.1
# 094 2.4000 (% 74.740) (% 69.249) (% 70.989)  5.02 - D. ficusphila droFic2
# 095 2.5000 (% 12.705) (% 01.099) (% 10.228) 19.50 - A_atroparvus GCA_000473505.1
# 096 2.5000 (% 03.974) (% 00.006) (% 02.904) 26.93 - Trichoceridae_BV-2014 GCA_001014425.1
# 097 2.5000 (% 70.590) (% 63.401) (% 66.920)  5.20 - D. kikkawai droKik2
# 098 2.6000 (% 10.901) (% 00.266) (% 09.276) 14.91 - Holcocephala_fusca GCA_001015215.1
# 099 2.6000 (% 45.382) (% 23.358) (% 42.597)  6.14 - D_americana GCA_001245395.1
# 100 2.6000 (% 14.594) (% 02.120) (% 12.338) 15.46 - Proctacanthus_coquilletti GCA_001932985.1
# 101 2.6000 (% 11.625) (% 00.628) (% 09.589) 17.51 - A_aquasalis GCA_002846955.1
# 102 2.7000 (% 11.794) (% 00.420) (% 09.621) 18.42 - A_christyi GCA_000349165.1
# 103 2.7000 (% 45.270) (% 28.835) (% 42.129)  6.94 - D_montana GCA_003086615.1
# 104 2.8000 (% 11.465) (% 00.776) (% 09.625) 16.05 - A_darlingi GCA_000211455.3
# 105 2.8000 (% 65.865) (% 58.038) (% 62.527)  5.07 - D. bipectinata droBip2
# 106 2.9000 (% 11.042) (% 00.387) (% 08.956) 18.89 - A_farauti_No4 GCA_000956215.1
# 107 2.9000 (% 39.549) (% 07.560) (% 36.390)  7.99 - D_nasuta GCA_002222885.1
# 108 3.0000 (% 12.236) (% 00.956) (% 10.014) 18.16 - A_funestus GCA_000349085.1
# 109 3.0000 (% 48.568) (% 39.962) (% 45.305)  6.72 - D_novamexicana GCA_003285875.1
# 110 3.1000 (% 12.374) (% 01.064) (% 10.105) 18.34 - A_farauti GCA_000473445.2
# 111 3.1000 (% 75.042) (% 65.814) (% 71.422)  4.82 - D. biarmipes droBia2
# 112 3.2000 (% 13.114) (% 00.820) (% 10.918) 16.75 - A_maculatus GCA_002091835.1
# 113 3.2000 (% 74.940) (% 63.105) (% 70.965)  5.30 - D. rhopaloa droRho2
# 114 3.3000 (% 12.718) (% 00.968) (% 10.295) 19.05 - A_sinensis GCA_000441895.2
# 115 3.3000 (% 42.552) (% 32.613) (% 39.667)  6.78 - Scaptodrosophila_lebanonensis GCA_003285725.1
# 116 3.4000 (% 12.353) (% 01.089) (% 10.054) 18.61 - A_minimus GCA_000349025.1
# 117 3.4000 (% 24.774) (% 05.843) (% 22.301)  9.98 - Phortica_variegata GCA_001014415.1
# 118 3.4000 (% 36.928) (% 06.376) (% 33.048) 10.51 - Zaprionus_indianus GCA_001752445.1
# 119 3.5000 (% 11.692) (% 00.646) (% 09.662) 17.36 - A_cracens GCA_002091845.1
# 120 3.6000 (% 11.996) (% 00.573) (% 09.817) 18.16 - A_culicifacies GCA_000473375.1
# 121 3.7000 (% 09.202) (% 00.045) (% 06.899) 25.03 - A_nili GCA_000439205.1
# 122 3.8000 (% 12.160) (% 00.872) (% 09.623) 20.86 - A_coluzzii GCA_000150765.1
# 123 3.8000 (% 12.650) (% 00.932) (% 10.196) 19.40 - A_epiroticus GCA_000349105.1

# None of this concern for distances matters in building the first step, the
# maf files.  The distances will be better calibrated later.

    cat dm6.124way.nh | sed -e 's/(/(\n/g; s/,/,\n/g; s/)/\n)/g; s/ //g;' \
       | grep -v "^$" \
          | ~/kent/src/hg/utils/phyloTrees/binaryTree.pl \
             -nameTranslate=dbName.to.sciName.txt -noInternal \
               -lineOutput /dev/stdin > dm6.124way.speciesName.nh

    # create species list and stripped down tree for autoMZ
    sed -e 's/,//g; s/:0.1//g; s/;//g;' dm6.124way.speciesName.nh \
       | xargs echo > tree.nh
    cat tree.nh | fold -s -w 77 | sed -e 's/^/# /;'
# ((((((((((((dm6 ((((((((((((((((((((((((((((((((Phortica_variegata 
# Zaprionus_indianus) Scaptodrosophila_lebanonensis) droRho2) droBia2) 
# D_novamexicana) D_nasuta) droBip2) D_montana) D_americana) droKik2) droFic2) 
# droEle2) D_busckii) droTak2) droEug2) droSuz1) droAlb1) D_obscura) 
# D_serrata) D_arizonae) droWil2) D_athabasca) droYak3) droVir3) D_subobscura) 
# droSim2) droSec1) (droPse3 D_pseudoobscura_1)) droPer1) D_navojoa) droMoj3) 
# droMir2)) D_hydei) droGri2) droEre2) droAna3) (((((((((((((((apiMel4 
# (((Trichoceridae_BV_2014 (Proctacanthus_coquilletti Holcocephala_fusca)) 
# Cirrula_hians) Ephydra_gracilis)) Condylostylus_patibulatus) 
# Eristalis_dimidiata) Paykullia_maculata) Hermetia_illucens) Tipula_oleracea) 
# Themira_minor) Mochlonyx_cinctipes) Chaoborus_trivitattus) 
# Liriomyza_trifolii) (((Coboldia_fuscipes Culicoides_sonorensis) 
# Sphyracephala_brevicornis) Teleopsis_dalmanni)) ((((((((Megaselia_abdita 
# Megaselia_scalaris) Mayetiola_destructor) Glossina_fuscipes) 
# Glossina_palpalis_gambiensis) Glossina_brevipalpis) Glossina_pallidipes) 
# Glossina_austeni) (Glossina_morsitans_2 Glossina_morsitans_1))) 
# (Sarcophagidae_BV_2014 Neobellieria_bullata)) ((Phormia_regina 
# (Lucilia_sericata Lucilia_cuprina)) Calliphora_vicina)) 
# ((Stomoxys_calcitrans musDom2) Haematobia_irritans))) 
# ((((((((Trupanea_jonesi Eutreta_diana) Tephritis_californica) 
# Rhagoletis_zephyria) Zeugodacus_cucurbitae) Bactrocera_latifrons) 
# Bactrocera_oleae) Bactrocera_tryoni) Bactrocera_dorsalis)) 
# Ceratitis_capitata) ((Clogmia_albipunctata Phlebotomus_papatasi) 
# Lutzomyia_longipalpis)) (((Culex_quinquefasciatus 
# ((((((((((((((((((((((((A_coluzzii A_epiroticus) A_nili) A_culicifacies) 
# A_cracens) A_minimus) A_sinensis) A_maculatus) A_farauti) A_funestus) 
# A_farauti_No4) A_darlingi) A_christyi) A_aquasalis) A_atroparvus) 
# A_quadriannulatus) A_melas) A_stephensi) A_punctulatus) A_merus) 
# A_koliensis) A_arabiensis) A_dirus) A_albimanus) (anoGam3 A_gambiae_1))) 
# Aedes_albopictus) Aedes_aegypti)) (((Clunio_marinus Belgica_antarctica) 
# Chironomus_riparius) Chironomus_tentans)) triCas2)

    sed -e 's/:.*//; s/(//g;' dm6.124way.speciesName.nh \
       | sed -e 's/ *//g;' | xargs echo > species.list

    cat species.list | fold -s -w 77 | sed -e 's/^/# /;'

# dm6 Phortica_variegata Zaprionus_indianus Scaptodrosophila_lebanonensis 
# droRho2 droBia2 D_novamexicana D_nasuta droBip2 D_montana D_americana 
# droKik2 droFic2 droEle2 D_busckii droTak2 droEug2 droSuz1 droAlb1 D_obscura 
# D_serrata D_arizonae droWil2 D_athabasca droYak3 droVir3 D_subobscura 
# droSim2 droSec1 droPse3 D_pseudoobscura_1 droPer1 D_navojoa droMoj3 droMir2 
# D_hydei droGri2 droEre2 droAna3 apiMel4 Trichoceridae_BV_2014 
# Proctacanthus_coquilletti Holcocephala_fusca Cirrula_hians Ephydra_gracilis 
# Condylostylus_patibulatus Eristalis_dimidiata Paykullia_maculata 
# Hermetia_illucens Tipula_oleracea Themira_minor Mochlonyx_cinctipes 
# Chaoborus_trivitattus Liriomyza_trifolii Coboldia_fuscipes 
# Culicoides_sonorensis Sphyracephala_brevicornis Teleopsis_dalmanni 
# Megaselia_abdita Megaselia_scalaris Mayetiola_destructor Glossina_fuscipes 
# Glossina_palpalis_gambiensis Glossina_brevipalpis Glossina_pallidipes 
# Glossina_austeni Glossina_morsitans_2 Glossina_morsitans_1 
# Sarcophagidae_BV_2014 Neobellieria_bullata Phormia_regina Lucilia_sericata 
# Lucilia_cuprina Calliphora_vicina Stomoxys_calcitrans musDom2 
# Haematobia_irritans Trupanea_jonesi Eutreta_diana Tephritis_californica 
# Rhagoletis_zephyria Zeugodacus_cucurbitae Bactrocera_latifrons 
# Bactrocera_oleae Bactrocera_tryoni Bactrocera_dorsalis Ceratitis_capitata 
# Clogmia_albipunctata Phlebotomus_papatasi Lutzomyia_longipalpis 
# Culex_quinquefasciatus A_coluzzii A_epiroticus A_nili A_culicifacies 
# A_cracens A_minimus A_sinensis A_maculatus A_farauti A_funestus 
# A_farauti_No4 A_darlingi A_christyi A_aquasalis A_atroparvus 
# A_quadriannulatus A_melas A_stephensi A_punctulatus A_merus A_koliensis 
# A_arabiensis A_dirus A_albimanus anoGam3 A_gambiae_1 Aedes_albopictus 
# Aedes_aegypti Clunio_marinus Belgica_antarctica Chironomus_riparius 
# Chironomus_tentans triCas2

    # take an N50 survery to see if the quality of these genomes makes a mark
    mkdir /hive/data/genomes/dm6/bed/multiz124way/n50Survey
    cd /hive/data/genomes/dm6/bed/multiz124way/n50Survey
    ln -s ../../awsMultiz/nameCorrespond/noDot.Names.tab .

sed -e 's/ /\n/g;' ../species.list | grep -v dm6 | while read db
do
   printf "# working: %s\n" "${db}"
   case "${db}" in
     [a-z][a-zA-Z]*)
        chromSizes="/hive/data/genomes/$db/chrom.sizes"
        mkdir -p "${db}"
        n50.pl "${chromSizes}" > "${db}/${db}.n50.txt" 2>&1
        ;;
     *)
        GCname=`grep -w "${db}" noDot.Names.tab | cut -f4`
        asmAccId=`grep -w "${db}" noDot.Names.tab | cut -f1`
        chromSizes=/hive/data/genomes/dm6/bed/awsMultiz/chromSizes/${asmAccId}.chrom.sizes
        echo mkdir -p "${GCname}.${db}"
        mkdir -p "${GCname}.${db}"
        n50.pl "${chromSizes}" > "${GCname}.${db}/${GCname}.${db}.n50.txt" 2>&1
        ;;
   esac
   echo "# $chromSizes" 1>&2
done


    cat > summary.pl << '_EOF_'
#!/usr/bin/env perl

use strict;
use warnings;

my $id = shift;
my $file = "$id/${id}.n50.txt";
my $totalSize = 0;
my $contigCount = 0;
my $lastLine = "";

open (FH, "<$file") or die "can not read $file";
while (my $line = <FH>) {
  chomp $line;
  if ($line =~ m/contig count:/) {
    (undef, undef, undef, $contigCount, undef, undef, $totalSize, undef) = split('\s+', $line, 8);
    $contigCount =~ s/,//g;
    $totalSize =~ s/,//g;
  }
  $lastLine = $line;
}
close (FH);
my (undef, $n50Count, $chrName, $n50Size) = split('\s+', $lastLine);
my $perCentN = 100.0 * $n50Count / $contigCount;
my $perCentSize = 100.0 * $n50Size / $totalSize;
printf "%d\t%d\t%d\t%d\t%.2f\t%.2f\t%s.%s\n", $totalSize, $contigCount, $n50Count, $n50Size, $perCentN, $perCentSize, $id, $chrName;
'_EOF_'
# << happy emacs

    chmod +x summary.pl

    ls | while read D
do
  if [ -d "${D}" ]; then
    ./summary.pl "${D}"
  fi
done > allSummary.tab

    cat allSummary.tab | sed -e 's/^/# /;'
# 185827756	24475	48	756041	0.20	0.41	GCA_000149185v1.Mayetiola_destructor.GL501440v1
# 224417174	10521	16	4437438	0.15	1.98	GCA_000150765v1.A_coluzzii.EQ090211v1
# 136935538	2220	288	115072	12.97	0.08	GCA_000211455v3.A_darlingi.ADMH02001234v1
# 363767980	106826	2065	27956	1.93	0.01	GCA_000262795v1.Phlebotomus_papatasi.JH662767v1
# 154229266	11532	491	85093	4.26	0.06	GCA_000265325v1.Lutzomyia_longipalpis.JH689808v1
# 489347612	231041	21957	5716	9.50	0.00	GCA_000341915v2.Megaselia_scalaris.HF909063v1
# 201793324	678	6	10313149	0.88	5.11	GCA_000349025v1.A_minimus.KB664165v1
# 283828998	2823	54	1641272	1.91	0.58	GCA_000349065v1.A_quadriannulatus.KB667733v1
# 225223604	1392	100	671960	7.18	0.30	GCA_000349085v1.A_funestus.KB668600v1
# 223486714	2673	157	366526	5.87	0.16	GCA_000349105v1.A_epiroticus.KB671025v1
# 173339239	201	2	37976048	1.00	21.91	GCA_000349125v2.A_albimanus.CM008152v1
# 216307690	1266	9	6906475	0.71	3.19	GCA_000349145v1.A_dirus.KB673645v1
# 172658580	30369	5047	9057	16.62	0.01	GCA_000349165v1.A_christyi.KB698346v1
# 246567867	1214	14	5604218	1.15	2.27	GCA_000349185v1.A_arabiensis.KB704396v1
# 98320046	51048	11084	2577	21.71	0.00	GCA_000439205v1.A_nili.ATLZ01042139v1
# 220777669	9592	66	814231	0.69	0.37	GCA_000441895v2.A_sinensis.KE524847v1
# 202998806	16162	2479	22320	15.34	0.01	GCA_000473375v1.A_culicifacies.KI423842v1
# 183103254	310	5	12895223	1.61	7.04	GCA_000473445v2.A_farauti.KI915044v1
# 224290125	1371	9	9206694	0.66	4.10	GCA_000473505v1.A_atroparvus.KI421890v1
# 224162116	20229	3627	18103	17.93	0.01	GCA_000473525v2.A_melas.KI922869v1
# 288048996	2027	53	1489982	2.61	0.52	GCA_000473845v2.A_merus.KI915208v1
# 374774708	2395	179	561190	7.47	0.15	GCA_000671735v1.Glossina_fuscipes.KK351962v1
# 315360362	1651	63	1209507	3.82	0.38	GCA_000671755v1.Glossina_brevipalpis.KK351075v1
# 357332231	1726	95	1038751	5.50	0.29	GCA_000688715v1.Glossina_pallidipes.KK499856v1
# 370264922	2205	116	812585	5.26	0.22	GCA_000688735v1.Glossina_austeni.KK502522v1
# 519005690	31960	1589	69551	4.97	0.01	GCA_000695345v1.Bactrocera_tryoni.JHQJ01001589v1
# 89583723	4997	263	98263	5.26	0.11	GCA_000775305v1.Belgica_antarctica.JPYR01000263v1
# 213462749	26025	799	57274	3.07	0.03	GCA_000786525v1.Chironomus_tentans.HG429510v1
# 380104241	3926	187	575037	4.76	0.15	GCA_000818775v1.Glossina_palpalis_gambiensis.KN796281v1
# 146379160	14407	2352	16229	16.33	0.01	GCA_000956215v1.A_farauti_No4.JXWZ01001073v1
# 146157495	20774	4425	10256	21.30	0.01	GCA_000956255v1.A_punctulatus.JXXA01003409v1
# 151110088	41925	9238	4659	22.03	0.00	GCA_000956275v1.A_koliensis.JXXB01037868v1
# 98759061	1732	131	242385	7.56	0.25	GCA_001014335v1.Coboldia_fuscipes.JXOR01000856v1
# 155550413	19473	2424	16703	12.45	0.01	GCA_001014415v1.Phortica_variegata.JXPM01006483v1
# 41711596	26743	9484	1520	35.46	0.00	GCA_001014425v1.Trichoceridae_BV_2014.JXPK01000229v1
# 119047972	29237	4873	6248	16.67	0.01	GCA_001014495v1.D_pseudoobscura_1.JXPY01008192v1
# 154533842	29677	3666	9868	12.35	0.01	GCA_001014505v1.Chironomus_riparius.JXPV01022762v1
# 348062779	32924	4597	20491	13.96	0.01	GCA_001014515v1.Glossina_morsitans_1.JXPS01002251v1
# 220394761	54385	7604	6406	13.98	0.00	GCA_001014525v1.A_gambiae_1.JXPR01031505v1
# 99885510	33166	6593	3571	19.88	0.00	GCA_001014575v1.Themira_minor.JXPZ01002747v1
# 97281263	66952	24558	1424	36.68	0.00	GCA_001014665v1.Trupanea_jonesi.JXQA01042617v1
# 410872512	61434	9115	11309	14.84	0.00	GCA_001014675v1.Ephydra_gracilis.JXPQ01023907v1
# 269281158	80757	19790	4087	24.51	0.00	GCA_001014815v1.Chaoborus_trivitattus.JXOU01024510v1
# 319935455	92075	18282	4679	19.86	0.00	GCA_001014835v1.Lucilia_sericata.JXPF01005331v1
# 441264227	95131	20125	6407	21.16	0.00	GCA_001014845v1.Mochlonyx_cinctipes.JXPH01017698v1
# 451941653	211317	65449	2239	30.97	0.00	GCA_001014875v1.Condylostylus_patibulatus.JXOW01057012v1
# 890457210	319196	72289	3532	22.65	0.00	GCA_001014895v1.Hermetia_illucens.JXPW01083919v1
# 69698627	31049	8980	2213	28.92	0.00	GCA_001014935v1.Liriomyza_trifolii.JXHJ01023086v1
# 256248749	42886	4627	13081	10.79	0.01	GCA_001014945v1.Clogmia_albipunctata.JXOV01011064v1
# 399685866	172401	44029	2483	25.54	0.00	GCA_001015075v1.Cirrula_hians.JXOS01135914v1
# 233053157	139046	46173	1675	33.21	0.00	GCA_001015115v1.Eutreta_diana.JXPB01129152v1
# 315428702	146196	45345	2265	31.02	0.00	GCA_001015145v1.Eristalis_dimidiata.JXPC01018813v1
# 412270594	121379	24572	4558	20.24	0.00	GCA_001015175v1.Megaselia_abdita.JXPG01070982v1
# 516230974	133294	27310	5217	20.49	0.00	GCA_001015215v1.Holcocephala_fusca.JXPE01067669v1
# 315521093	135449	33698	2517	24.88	0.00	GCA_001015235v1.Sphyracephala_brevicornis.JXPL01134982v1
# 459231066	197510	58156	2418	29.44	0.00	GCA_001017275v1.Calliphora_vicina.JXOT01014743v1
# 396224597	184347	50510	2219	27.40	0.00	GCA_001017455v1.Neobellieria_bullata.JXPI01120524v1
# 342257700	183295	56167	1969	30.64	0.00	GCA_001017515v1.Tephritis_californica.JXPN01099661v1
# 541697276	186864	46153	3390	24.70	0.00	GCA_001017535v1.Tipula_oleracea.JXPP01008883v1
# 494580772	287425	94409	1715	32.85	0.00	GCA_001047195v1.Sarcophagidae_BV_2014.JXPX01232301v1
# 363107242	24071	2012	49769	8.36	0.01	GCA_001077435v1.Glossina_morsitans_2.CCAG010002470v1
# 163286826	24251	2122	20926	8.75	0.01	GCA_001245395v1.D_americana.CWKB01021413v1
# 549932840	192460	16441	7927	8.54	0.00	GCA_001735545v1.Phormia_regina.MINK01029515v1
# 123674749	48067	6136	4855	12.77	0.00	GCA_001752445v1.Zaprionus_indianus.LWKS01032901v1
# 208907727	14695	70	862345	0.48	0.41	GCA_001932985v1.Proctacanthus_coquilletti.MNCL01000070v1
# 462688933	50590	654	198528	1.29	0.04	GCA_002091835v1.A_maculatus.KZ062192v1
# 326465827	34365	636	153896	1.85	0.05	GCA_002091845v1.A_cracens.KZ072709v1
# 137224182	46105	5939	5692	12.88	0.00	GCA_002222885v1.D_nasuta.LYTC01007807v1
# 621706043	25142	1905	66701	7.58	0.01	GCA_002237135v1.Teleopsis_dalmanni.NLCU01018533v1
# 117291146	2042	363	91130	17.78	0.08	GCA_002749795v1.D_subobscura.NGKO01000981v1
# 162944031	16504	788	53365	4.77	0.03	GCA_002846955v1.A_aquasalis.NJHH01001409v1
# 422395093	147653	14701	7609	9.96	0.00	GCA_003055125v1.Paykullia_maculata.NDXZ01051757v1
# 183585048	63742	1125	40647	1.76	0.02	GCA_003086615v1.D_montana.LUVX01060535v1
# 1143537531	76616	14391	23099	18.78	0.00	GCA_003123925v1.Haematobia_irritans.PGFW01003951v1
# 130277606	6	3	25589266	50.00	19.64	GCA_003185025v1.D_athabasca.CM009929v1
# 247026876	267	8	7853183	3.00	3.18	GCA_003285725v1.Scaptodrosophila_lebanonensis.QMEN01000210v1
# 182212895	292	19	3154395	6.51	1.73	GCA_003285875v1.D_novamexicana.QMEP01000059v1
# 196058862	227	3	37522140	1.32	19.14	GCA_003448975v1.A_stephensi.CM010646v1
# 85491412	23763	17	1871155	0.07	2.19	GCA_900005825v1.Clunio_marinus.CVRI01000074v1
# 194177243	7974	573	89502	7.19	0.05	GCA_900258525v2.Culicoides_sonorensis.OGVF02000860v1
# 579042118	3171	317	486756	10.00	0.08	GCF_000209185v1.Culex_quinquefasciatus.NW_001887033v1
# 436490799	2355	75	1665634	3.18	0.38	GCF_000347755v3.Ceratitis_capitata.NW_019376249v1
# 378290214	5858	350	275862	5.97	0.07	GCF_000699065v1.Lucilia_cuprina.NW_019410670v1
# 414984608	7166	91	1206000	1.27	0.29	GCF_000789215v1.Bactrocera_dorsalis.NW_011876307v1
# 374820345	5572	66	1399015	1.18	0.37	GCF_000806345v1.Zeugodacus_cucurbitae.NW_011863732v1
# 971188624	12042	509	504651	4.23	0.05	GCF_001015335v1.Stomoxys_calcitrans.NW_013172373v1
# 471780370	36198	474	139566	1.31	0.03	GCF_001188975v1.Bactrocera_oleae.NW_013581691v1
# 135748557	6	3	26871514	50.00	19.80	GCF_001277935v1.D_busckii.NC_030805v1
# 115885644	8053	3	21835025	0.04	18.84	GCF_001654015v1.D_navojoa.NW_017181430v1
# 141386800	3178	3	26536676	0.09	18.77	GCF_001654025v1.D_arizonae.NW_017127687v1
# 1113962544	86670	3479	62643	4.01	0.01	GCF_001687245v1.Rhagoletis_zephyria.NW_016160562v1
# 462505359	3306	126	974427	3.81	0.21	GCF_001853355v1.Bactrocera_latifrons.NW_017534675v1
# 2247306217	2435	203	3303944	8.34	0.15	GCF_001876365v2.Aedes_albopictus.NW_017857771v1
# 198035861	1356	38	942627	2.80	0.48	GCF_002093755v1.D_serrata.NW_018367330v1
# 1278732104	2310	2	409777670	0.09	32.05	GCF_002204515v2.Aedes_aegypti.NC_035109v1
# 181868570	1935	83	472512	4.29	0.26	GCF_002217835v1.D_obscura.NW_019152172v1
# 139940643	866	59	754803	6.81	0.54	GCF_002780465v1.D_hydei.NW_019379065v1
# 264974304	8041	3	49364325	0.04	18.63	anoGam3.chr2L
# 250287000	5321	8	13219345	0.15	5.28	apiMel4.Group7
# 253560284	26354	1494	23589	5.67	0.01	droAlb1.JH843725
# 230993012	13749	10	4599533	0.07	1.99	droAna3.scaffold_13339
# 169378599	5523	15	3386121	0.27	2.00	droBia2.KB462598
# 167263958	5500	52	663995	0.95	0.40	droBip2.KB464141
# 171267669	5429	29	1714184	0.53	1.00	droEle2.KB458555
# 152712140	5124	4	18748788	0.08	12.28	droEre2.scaffold_4690
# 156942009	4946	40	976885	0.81	0.62	droEug2.AFPQ02005244
# 152439475	5754	39	1050541	0.68	0.69	droFic2.KB457391
# 200467819	17440	7	8399593	0.04	4.19	droGri2.scaffold_15126
# 164292578	5141	48	903682	0.93	0.55	droKik2.KB459631
# 136728780	6	3	28826359	50.00	21.08	droMir2.chr4
# 193826310	6841	4	24764193	0.06	12.78	droMoj3.scaffold_6680
# 188374079	12838	21	1869541	0.16	0.99	droPer1.super_19
# 152711298	4791	4	12541198	0.08	8.21	droPse3.chrXL_CH379064_3_random
# 197375704	22819	654	45514	2.87	0.02	droRho2.KB451259
# 166577145	14730	13	2123299	0.09	1.27	droSec1.super_12
# 124963774	7619	3	23539531	0.04	18.84	droSim2.chr2L
# 232923092	8680	70	388966	0.81	0.17	droSuz1.KI421348
# 182106768	5733	131	387676	2.29	0.21	droTak2.KB461156
# 206026697	13530	6	10161210	0.04	4.93	droVir3.scaffold_12855
# 235516348	14838	15	4511350	0.10	1.92	droWil2.CH963851
# 165709965	8123	4	21770863	0.05	13.14	droYak3.chrX
# 750416349	20487	809	226573	3.95	0.03	musDom2.KB856044
# 199682416	2211	6	13894384	0.27	6.96	triCas2.ChLG4

	/hive/data/genomes/dm6/bed/multiz124way/chainBits.txt

    sort chainBits.txt | join -t$'\t' - <(sort n50.survey.txt) \
  | awk -F$'\t' '{printf "%s\t%7s\t%7s\t%7s\t%5d\t%6d\t%8d %s\n", $1,$2,$3,$4,$9,$10,$11, $8}'

# 015 0.9000 (% 82.570) (% 76.171) (% 77.512)  6.13 - D. simulans droSim2
# 011 0.8000 (% 82.561) (% 75.124) (% 77.243)  6.44 - D. sechellia droSec1
# 033 1.2000 (% 80.562) (% 72.649) (% 76.027)  5.63 - D. yakuba droYak3
# 006 0.5000 (% 80.023) (% 73.572) (% 75.414)  5.76 - D. erecta droEre2
# 085 2.1000 (% 75.507) (% 69.227) (% 71.728)  5.00 - D. takahashii droTak2
# 091 2.3000 (% 75.445) (% 69.103) (% 71.767)  4.88 - D. elegans droEle2
# 082 2.0000 (% 75.265) (% 70.366) (% 71.832)  4.56 - D. eugracilis droEug2
# 111 3.1000 (% 75.042) (% 65.814) (% 71.422)  4.82 - D. biarmipes droBia2
# 113 3.2000 (% 74.940) (% 63.105) (% 70.965)  5.30 - D. rhopaloa droRho2
# 094 2.4000 (% 74.740) (% 69.249) (% 70.989)  5.02 - D. ficusphila droFic2
# 079 1.9000 (% 74.591) (% 62.728) (% 70.682)  5.24 - D. suzukii droSuz1
# 097 2.5000 (% 70.590) (% 63.401) (% 66.920)  5.20 - D. kikkawai droKik2
# 065 1.6000 (% 70.419) (% 61.397) (% 67.226)  4.53 - D. serrata GCF_002093755.1
# 007 0.6000 (% 67.282) (% 56.872) (% 63.291)  5.93 - D. ananassae droAna3
# 105 2.8000 (% 65.865) (% 58.038) (% 62.527)  5.07 - D. bipectinata droBip2
# 070 1.7000 (% 61.561) (% 54.854) (% 58.329)  5.25 - D. obscura GCF_002217835.1
# 010 0.8000 (% 59.836) (% 50.757) (% 56.761)  5.14 - D. pseudoobscura droPse3
# 002 0.3000 (% 59.308) (% 52.207) (% 56.423)  4.86 - D. miranda droMir2
# 008 0.6000 (% 59.049) (% 50.601) (% 55.758)  5.57 - D. persimilis droPer1
# 018 1.0000 (% 55.249) (% 50.225) (% 53.549)  3.08 - D. subobscura GCA_002749795.1
# 040 1.3000 (% 54.625) (% 47.918) (% 52.193)  4.45 - D. athabasca GCA_003185025.1
# 026 1.1000 (% 51.937) (% 40.274) (% 47.879)  7.81 - D. virilis droVir3
# 050 1.4000 (% 51.432) (% 39.052) (% 48.544)  5.62 - D. willistoni droWil2
# 003 0.4000 (% 50.979) (% 39.157) (% 47.497)  6.83 - D. grimshawi droGri2
# 004 0.4000 (% 50.132) (% 38.715) (% 45.938)  8.37 - D. mojavensis droMoj3
# 009 0.8000 (% 49.001) (% 15.121) (% 46.014)  6.10 - D. pseudoobscura GCA_001014495.1
# 109 3.0000 (% 48.568) (% 39.962) (% 45.305)  6.72 - D. novamexicana GCA_003285875.1
# 001 0.3000 (% 45.605) (% 39.090) (% 43.146)  5.39 - D. hydei GCF_002780465.1
# 099 2.6000 (% 45.382) (% 23.358) (% 42.597)  6.14 - D. americana GCA_001245395.1
# 103 2.7000 (% 45.270) (% 28.835) (% 42.129)  6.94 - D. montana GCA_003086615.1
# 074 1.8000 (% 44.544) (% 25.330) (% 41.368)  7.13 - D. albomicans droAlb1
# 115 3.3000 (% 42.552) (% 32.613) (% 39.667)  6.78 - Scaptodrosophila_lebanonensis GCA_003285725.1
# 087 2.2000 (% 42.220) (% 31.758) (% 39.285)  6.95 - D. busckii GCF_001277935.1
# 058 1.5000 (% 41.792) (% 32.657) (% 39.023)  6.63 - D. arizonae GCF_001654025.1
# 107 2.9000 (% 39.549) (% 07.560) (% 36.390)  7.99 - D. nasuta GCA_002222885.1
# 118 3.4000 (% 36.928) (% 06.376) (% 33.048) 10.51 - Zaprionus_indianus GCA_001752445.1
# 005 0.5000 (% 36.286) (% 26.266) (% 33.214)  8.47 - D. navojoa GCF_001654015.1
# 117 3.4000 (% 24.774) (% 05.843) (% 22.301)  9.98 - Phortica_variegata GCA_001014415.1
# 039 1.3000 (% 23.293) (% 05.643) (% 20.375) 12.53 - Teleopsis_dalmanni GCA_002237135.1
# 049 1.4000 (% 21.196) (% 02.689) (% 17.814) 15.96 - Rhagoletis_zephyria GCF_001687245.1
# 030 1.2000 (% 20.785) (% 05.586) (% 17.868) 14.03 - Lucilia_cuprina GCF_000699065.1
# 031 1.2000 (% 20.469) (% 07.177) (% 17.499) 14.51 - Bactrocera_latifrons GCF_001853355.1
# 025 1.1000 (% 20.400) (% 06.304) (% 17.503) 14.20 - Bactrocera_oleae GCF_001188975.1
# 041 1.3000 (% 20.252) (% 08.183) (% 17.366) 14.25 - Zeugodacus_cucurbitae GCF_000806345.1
# 024 1.1000 (% 20.199) (% 01.158) (% 17.347) 14.12 - Phormia_regina GCA_001735545.1
# 013 0.9000 (% 19.997) (% 07.370) (% 17.255) 13.71 - Ceratitis_capitata GCF_000347755.3
# 078 1.9000 (% 19.655) (% 00.858) (% 16.653) 15.27 - Paykullia_maculata GCA_003055125.1
# 016 1.0000 (% 19.523) (% 03.969) (% 16.269) 16.67 - Bactrocera_tryoni GCA_000695345.1
# 020 1.0000 (% 19.278) (% 04.003) (% 16.469) 14.57 - M. domestica musDom2
# 014 0.9000 (% 19.222) (% 06.919) (% 16.309) 15.15 - Bactrocera_dorsalis GCF_000789215.1
# 019 1.0000 (% 18.152) (% 03.734) (% 15.680) 13.62 - Stomoxys_calcitrans GCF_001015335.1
# 044 1.4000 (% 17.101) (% 05.616) (% 14.994) 12.32 - Glossina_pallidipes GCA_000688715.1
# 068 1.7000 (% 17.078) (% 05.045) (% 15.036) 11.96 - Glossina_fuscipes_fuscipes GCA_000671735.1
# 051 1.5000 (% 17.022) (% 05.521) (% 14.980) 12.00 - Glossina_brevipalpis GCA_000671755.1
# 038 1.3000 (% 16.954) (% 02.119) (% 14.867) 12.31 - Glossina_morsitans_morsitans GCA_001077435.1
# 034 1.3000 (% 16.948) (% 05.064) (% 14.848) 12.39 - Glossina_austeni GCA_000688735.1
# 060 1.6000 (% 16.827) (% 04.540) (% 14.770) 12.22 - Glossina_palpalis_gambiensis GCA_000818775.1
# 090 2.3000 (% 16.643) (% 00.911) (% 14.428) 13.31 - Ephydra_gracilis GCA_001014675.1
# 028 1.2000 (% 15.766) (% 00.519) (% 13.321) 15.51 - Lucilia_sericata GCA_001014835.1
# 036 1.3000 (% 15.733) (% 01.238) (% 13.720) 12.79 - Glossina_morsitans GCA_001014515.1
# 017 1.0000 (% 15.621) (% 00.349) (% 12.709) 18.64 - Calliphora_vicina GCA_001017275.1
# 042 1.3000 (% 15.172) (% 00.828) (% 12.700) 16.29 - Aedes_albopictus GCF_001876365.2
# 047 1.4000 (% 14.969) (% 00.369) (% 12.189) 18.57 - Sphyracephala_brevicornis GCA_001015235.1
# 100 2.6000 (% 14.594) (% 02.120) (% 12.338) 15.46 - Proctacanthus_coquilletti GCA_001932985.1
# 012 0.9000 (% 14.236) (% 00.398) (% 11.651) 18.16 - Haematobia_irritans GCA_003123925.1
# 062 1.6000 (% 14.206) (% 00.825) (% 11.274) 20.64 - Themira_minor GCA_001014575.1
# 043 1.3000 (% 14.092) (% 00.480) (% 11.352) 19.44 - T. castaneum triCas2
# 032 1.2000 (% 14.028) (% 00.847) (% 11.508) 17.96 - Aedes_aegypti GCF_002204515.2
# 066 1.6000 (% 13.776) (% 01.160) (% 11.198) 18.71 - A. gambiae anoGam3
# 048 1.4000 (% 13.421) (% 00.942) (% 10.997) 18.06 - Culex_quinquefasciatus GCF_000209185.1
# 077 1.9000 (% 13.126) (% 00.252) (% 10.704) 18.45 - Megaselia_abdita GCA_001015175.1
# 112 3.2000 (% 13.114) (% 00.820) (% 10.918) 16.75 - A. maculatus GCA_002091835.1
# 055 1.5000 (% 12.995) (% 00.067) (% 10.479) 19.36 - Tephritis_californica GCA_001017515.1
# 080 2.0000 (% 12.901) (% 01.016) (% 10.341) 19.84 - A. merus GCA_000473845.2
# 067 1.7000 (% 12.779) (% 01.099) (% 10.236) 19.90 - A. dirus GCA_000349145.1
# 093 2.4000 (% 12.751) (% 00.125) (% 10.072) 21.01 - Cirrula_hians GCA_001015075.1
# 072 1.8000 (% 12.738) (% 01.126) (% 10.298) 19.16 - A. arabiensis GCA_000349185.1
# 114 3.3000 (% 12.718) (% 00.968) (% 10.295) 19.05 - A. sinensis GCA_000441895.2
# 095 2.5000 (% 12.705) (% 01.099) (% 10.228) 19.50 - A. atroparvus GCA_000473505.1
# 123 3.8000 (% 12.650) (% 00.932) (% 10.196) 19.40 - A. epiroticus GCA_000349105.1
# 092 2.4000 (% 12.514) (% 01.057) (% 10.160) 18.81 - A. quadriannulatus GCA_000349065.1
# 110 3.1000 (% 12.374) (% 01.064) (% 10.105) 18.34 - A. farauti GCA_000473445.2
# 116 3.4000 (% 12.353) (% 01.089) (% 10.054) 18.61 - A. minimus GCA_000349025.1
# 108 3.0000 (% 12.236) (% 00.956) (% 10.014) 18.16 - A. funestus GCA_000349085.1
# 089 2.3000 (% 12.182) (% 00.468) (% 09.870) 18.98 - A. melas GCA_000473525.2
# 122 3.8000 (% 12.160) (% 00.872) (% 09.623) 20.86 - A. coluzzii GCA_000150765.1
# 029 1.2000 (% 12.098) (% 00.376) (% 09.885) 18.29 - Clogmia_albipunctata GCA_001014945.1
# 027 1.2000 (% 12.066) (% 00.301) (% 09.732) 19.34 - Phlebotomus_papatasi GCA_000262795.1
# 120 3.6000 (% 11.996) (% 00.573) (% 09.817) 18.16 - A. culicifacies GCA_000473375.1
# 086 2.2000 (% 11.913) (% 01.049) (% 09.642) 19.06 - A. stephensi GCA_003448975.1
# 053 1.5000 (% 11.908) (% 00.797) (% 10.130) 14.93 - Coboldia_fuscipes GCA_001014335.1
# 057 1.5000 (% 11.882) (% 00.497) (% 10.110) 14.91 - Culicoides_sonorensis GCA_900258525.2
# 059 1.6000 (% 11.850) (% 01.017) (% 09.826) 17.08 - A. albimanus GCA_000349125.2
# 102 2.7000 (% 11.794) (% 00.420) (% 09.621) 18.42 - A. christyi GCA_000349165.1
# 119 3.5000 (% 11.692) (% 00.646) (% 09.662) 17.36 - A. cracens GCA_002091845.1
# 101 2.6000 (% 11.625) (% 00.628) (% 09.589) 17.51 - A. aquasalis GCA_002846955.1
# 054 1.5000 (% 11.607) (% 00.215) (% 09.594) 17.34 - Mochlonyx_cinctipes GCA_001014845.1
# 073 1.8000 (% 11.575) (% 00.049) (% 09.548) 17.51 - Hermetia_illucens GCA_001014895.1
# 104 2.8000 (% 11.465) (% 00.776) (% 09.625) 16.05 - A. darlingi GCA_000211455.3
# 022 1.1000 (% 11.431) (% 00.074) (% 08.641) 24.41 - Neobellieria_bullata GCA_001017455.1
# 064 1.6000 (% 11.427) (% 00.049) (% 09.111) 20.27 - Eutreta_diana GCA_001015115.1
# 106 2.9000 (% 11.042) (% 00.387) (% 08.956) 18.89 - A. farauti_No._4 GCA_000956215.1
# 098 2.6000 (% 10.901) (% 00.266) (% 09.276) 14.91 - Holcocephala_fusca GCA_001015215.1
# 021 1.1000 (% 10.883) (% 00.537) (% 08.780) 19.32 - Lutzomyia_longipalpis GCA_000265325.1
# 076 1.9000 (% 10.841) (% 00.253) (% 08.787) 18.95 - A. koliensis GCA_000956275.1
# 052 1.5000 (% 10.737) (% 00.588) (% 09.031) 15.89 - Belgica_antarctica GCA_000775305.1
# 083 2.1000 (% 10.686) (% 00.327) (% 08.649) 19.06 - A. punctulatus GCA_000956255.1
# 056 1.5000 (% 10.684) (% 00.770) (% 09.102) 14.81 - Clunio_marinus GCA_900005825.1
# 071 1.8000 (% 10.512) (% 00.608) (% 08.836) 15.94 - Mayetiola_destructor GCA_000149185.1
# 023 1.1000 (% 10.061) (% 00.053) (% 07.957) 20.91 - Sarcophagidae_sp._BV-2014 GCA_001047195.1
# 035 1.3000 (% 09.943) (% 00.484) (% 08.534) 14.17 - Chironomus_tentans GCA_000786525.1
# 045 1.4000 (% 09.683) (% 00.306) (% 08.276) 14.53 - Chironomus_riparius GCA_001014505.1
# 061 1.6000 (% 09.584) (% 00.236) (% 07.275) 24.09 - A. gambiae GCA_001014525.1
# 037 1.3000 (% 09.358) (% 00.017) (% 06.974) 25.48 - Liriomyza_trifolii GCA_001014935.1
# 081 2.0000 (% 09.259) (% 00.058) (% 07.114) 23.17 - Eristalis_dimidiata GCA_001015145.1
# 121 3.7000 (% 09.202) (% 00.045) (% 06.899) 25.03 - A. nili GCA_000439205.1
# 046 1.4000 (% 08.821) (% 00.076) (% 06.974) 20.94 - Chaoborus_trivitattus GCA_001014815.1
# 069 1.7000 (% 08.632) (% 00.231) (% 06.961) 19.36 - Tipula_oleracea GCA_001017535.1
# 088 2.2000 (% 08.183) (% 00.407) (% 06.697) 18.16 - A. mellifera apiMel4
# 084 2.1000 (% 08.158) (% 00.024) (% 06.304) 22.73 - Condylostylus_patibulatus GCA_001014875.1
# 075 1.9000 (% 08.143) (% 00.139) (% 06.166) 24.28 - Megaselia_scalaris GCA_000341915.2
# 063 1.6000 (% 07.450) (% 00.016) (% 05.115) 31.34 - Trupanea_jonesi GCA_001014665.1
# 096 2.5000 (% 03.974) (% 00.006) (% 02.904) 26.93 - Trichoceridae_sp._BV-2014 GCA_001014425.1

    # rules for selection:
    # 1. when recibBest > %40 use recipBest
    # 2. otherwise, use chainNet
  
    #	bash shell syntax here ...
    cd /hive/data/genomes/dm6/bed/multiz124way
    export H=/hive/data/genomes/dm6/bed
    mkdir mafLinks

    # need to fixup the names in the maf files:
ls -d ../awsMultiz/lastzRun/lastz_G* | while read D
do
  S=`basename $D | sed -e 's/lastz_//; s/\./v/;'`
  lnk=`ls ${D}/fb.dm6.chain.G*Link.txt`
  B=`basename $lnk | sed -e 's/fb.dm6.chain.//; s/Link.txt//;'`
  printf "%s\t%s\n" "${S}" "${B}"
done > clean.name.list

    # after N50 survey, select: N50 size > 1000000 and N50 count < 20
    # assemblies using syntenic net:
    #
    for G in GCA_000150765.1 GCA_000349025.1 GCA_000349125.2 \
GCA_000349145.1 GCA_000349185.1 GCA_000473445.2 GCA_000473505.1 \
GCA_003185025.1 GCA_003285725.1 GCA_003285875.1 GCA_003448975.1 \
GCA_900005825.1 GCF_001277935.1 GCF_001654015.1 GCF_001654025.1 \
GCF_002204515.2 anoGam3 apiMel4 droAna3 droBia2 droEre2 droGri2 droMir2 \
droMoj3 droPse3 droSec1 droSim2 droVir3 droWil2 droYak3 triCas2
    do
      case "${G}" in
           G*)
              dirtyName=`grep "${G}" clean.name.list | cut -f2`
              sciName=`grep "${G}" accession.asmId.toSciName.tab | cut -f2`
              mkdir mafLinks.synNet/$sciName
              echo "process $dirtyName -> $sciName"
              zcat $H/awsMultiz/lastzRun/lastz_$G/axtChain/dm6.${dirtyName}.synNet.maf.gz | sed -e "s/^s $dirtyName/s $sciName/;" | gzip -c > mafLinks.synNet/$sciName/dm6.$sciName.synNet.maf.gz 
              ;;
           *)
              mkdir mafLinks.synNet/$G
      echo ln -s ${H}/lastz.$G/axtChain/dm6.${G}.synNet.maf.gz ./mafLinks.synNet/$G
      ln -s ${H}/lastz.$G/axtChain/dm6.${G}.synNet.maf.gz ./mafLinks.synNet/$G
              ;;
      esac
    done

    # all other assemblies
    #
    for G in GCA_000149185.1 GCA_000211455.3 GCA_000262795.1 GCA_000265325.1 \
GCA_000341915.2 GCA_000349065.1 GCA_000349085.1 GCA_000349105.1 \
GCA_000349165.1 GCA_000439205.1 GCA_000441895.2 GCA_000473375.1 \
GCA_000473525.2 GCA_000473845.2 GCA_000671735.1 GCA_000671755.1 \
GCA_000688715.1 GCA_000688735.1 GCA_000695345.1 GCA_000775305.1 \
GCA_000786525.1 GCA_000818775.1 GCA_000956215.1 GCA_000956255.1 \
GCA_000956275.1 GCA_001014335.1 GCA_001014415.1 GCA_001014425.1 \
GCA_001014495.1 GCA_001014505.1 GCA_001014515.1 GCA_001014525.1 \
GCA_001014575.1 GCA_001014665.1 GCA_001014675.1 GCA_001014815.1 \
GCA_001014835.1 GCA_001014845.1 GCA_001014875.1 GCA_001014895.1 \
GCA_001014935.1 GCA_001014945.1 GCA_001015075.1 GCA_001015115.1 \
GCA_001015145.1 GCA_001015175.1 GCA_001015215.1 GCA_001015235.1 \
GCA_001017275.1 GCA_001017455.1 GCA_001017515.1 GCA_001017535.1 \
GCA_001047195.1 GCA_001077435.1 GCA_001245395.1 GCA_001735545.1 \
GCA_001752445.1 GCA_001932985.1 GCA_002091835.1 GCA_002091845.1 \
GCA_002222885.1 GCA_002237135.1 GCA_002749795.1 GCA_002846955.1 \
GCA_003055125.1 GCA_003086615.1 GCA_003123925.1 GCA_900258525.2 \
GCF_000209185.1 GCF_000347755.3 GCF_000699065.1 GCF_000789215.1 \
GCF_000806345.1 GCF_001015335.1 GCF_001188975.1 GCF_001687245.1 \
GCF_001853355.1 GCF_001876365.2 GCF_002093755.1 GCF_002217835.1 \
GCF_002780465.1 droAlb1 droBip2 droEle2 droEug2 droFic2 droKik2 droPer1 \
droRho2 droSuz1 droTak2 musDom2
    do
      case "${G}" in
           G*)
              dirtyName=`grep "${G}" clean.name.list | cut -f2`
              sciName=`grep "${G}" accession.asmId.toSciName.tab | cut -f2`
              mkdir mafLinks.synNet/$sciName
              echo "process $dirtyName -> $sciName"
              zcat $H/awsMultiz/lastzRun/lastz_$G/mafNet/dm6.${dirtyName}.net.maf.gz | sed -e "s/^s $dirtyName/s $sciName/;" | gzip -c > mafLinks.synNet/$sciName/dm6.$cleanName.net.maf.gz 
              ;;
           *)
      mkdir mafLinks.synNet/$G
      echo ln -s ${H}/lastz.$G/mafNet/dm6.${G}.net.maf.gz ./mafLinks.synNet/$G
      ln -s ${H}/lastz.$G/mafNet/dm6.${G}.net.maf.gz ./mafLinks.synNet/$G
              ;;
      esac
    done

    # verify the symLinks are good:
    ls -ogL mafLinks/*/* | sed -e 's/^/# /; s/-rw-rw-r-- 1//;'
#  11333126 Nov 15 16:12 mafLinks/GCA_000149185v1/dm6.GCA_000149185v1.net.maf.gz
#  12585452 Nov 15 16:09 mafLinks/GCA_000150765v1/dm6.GCA_000150765v1.net.maf.gz
#  11958535 Nov 15 16:11 mafLinks/GCA_000211455v3/dm6.GCA_000211455v3.net.maf.gz
#  12672813 Nov 15 16:09 mafLinks/GCA_000262795v1/dm6.GCA_000262795v1.net.maf.gz
#  11401045 Nov 15 16:11 mafLinks/GCA_000265325v1/dm6.GCA_000265325v1.net.maf.gz
#   8563639 Nov 15 16:13 mafLinks/GCA_000341915v2/dm6.GCA_000341915v2.net.maf.gz
#  12789090 Nov 15 16:08 mafLinks/GCA_000349025v1/dm6.GCA_000349025v1.net.maf.gz
#  12956817 Nov 15 16:08 mafLinks/GCA_000349065v1/dm6.GCA_000349065v1.net.maf.gz
#  12741318 Nov 15 16:09 mafLinks/GCA_000349085v1/dm6.GCA_000349085v1.net.maf.gz
#  13079990 Nov 15 16:08 mafLinks/GCA_000349105v1/dm6.GCA_000349105v1.net.maf.gz
#  12326184 Nov 15 16:10 mafLinks/GCA_000349125v2/dm6.GCA_000349125v2.net.maf.gz
#  13183362 Nov 15 16:07 mafLinks/GCA_000349145v1/dm6.GCA_000349145v1.net.maf.gz
#  12260481 Nov 15 16:10 mafLinks/GCA_000349165v1/dm6.GCA_000349165v1.net.maf.gz
#  13155808 Nov 15 16:07 mafLinks/GCA_000349185v1/dm6.GCA_000349185v1.net.maf.gz
#   9544392 Nov 15 16:13 mafLinks/GCA_000439205v1/dm6.GCA_000439205v1.net.maf.gz
#  13161139 Nov 15 16:08 mafLinks/GCA_000441895v2/dm6.GCA_000441895v2.net.maf.gz
#  12474052 Nov 15 16:09 mafLinks/GCA_000473375v1/dm6.GCA_000473375v1.net.maf.gz
#  12812985 Nov 15 16:08 mafLinks/GCA_000473445v2/dm6.GCA_000473445v2.net.maf.gz
#  13140048 Nov 15 16:08 mafLinks/GCA_000473505v1/dm6.GCA_000473505v1.net.maf.gz
#  12653887 Nov 15 16:09 mafLinks/GCA_000473525v2/dm6.GCA_000473525v2.net.maf.gz
#  13326441 Nov 15 16:07 mafLinks/GCA_000473845v2/dm6.GCA_000473845v2.net.maf.gz
#  18047510 Nov 15 16:03 mafLinks/GCA_000671735v1/dm6.GCA_000671735v1.net.maf.gz
#  18087475 Nov 15 16:04 mafLinks/GCA_000671755v1/dm6.GCA_000671755v1.net.maf.gz
#  18079450 Nov 15 16:03 mafLinks/GCA_000688715v1/dm6.GCA_000688715v1.net.maf.gz
#  17880192 Nov 15 16:04 mafLinks/GCA_000688735v1/dm6.GCA_000688735v1.net.maf.gz
#  20638451 Nov 15 16:03 mafLinks/GCA_000695345v1/dm6.GCA_000695345v1.net.maf.gz
#  11249131 Nov 15 16:12 mafLinks/GCA_000775305v1/dm6.GCA_000775305v1.net.maf.gz
#  10662481 Nov 15 16:12 mafLinks/GCA_000786525v1/dm6.GCA_000786525v1.net.maf.gz
#  17796730 Nov 15 16:04 mafLinks/GCA_000818775v1/dm6.GCA_000818775v1.net.maf.gz
#  11494209 Nov 15 16:11 mafLinks/GCA_000956215v1/dm6.GCA_000956215v1.net.maf.gz
#  11141218 Nov 15 16:12 mafLinks/GCA_000956255v1/dm6.GCA_000956255v1.net.maf.gz
#  11291664 Nov 15 16:12 mafLinks/GCA_000956275v1/dm6.GCA_000956275v1.net.maf.gz
#  12741029 Nov 15 16:10 mafLinks/GCA_001014335v1/dm6.GCA_001014335v1.net.maf.gz
#  26907825 Nov 15 16:00 mafLinks/GCA_001014415v1/dm6.GCA_001014415v1.net.maf.gz
#   4156419 Nov 15 16:14 mafLinks/GCA_001014425v1/dm6.GCA_001014425v1.net.maf.gz
#  52328176 Nov 15 15:54 mafLinks/GCA_001014495v1/dm6.GCA_001014495v1.rbest.maf.gz
#  10338452 Nov 15 16:12 mafLinks/GCA_001014505v1/dm6.GCA_001014505v1.net.maf.gz
#  16647307 Nov 15 16:05 mafLinks/GCA_001014515v1/dm6.GCA_001014515v1.net.maf.gz
#  10109314 Nov 15 16:13 mafLinks/GCA_001014525v1/dm6.GCA_001014525v1.net.maf.gz
#  14762306 Nov 15 16:06 mafLinks/GCA_001014575v1/dm6.GCA_001014575v1.net.maf.gz
#   7754369 Nov 15 16:13 mafLinks/GCA_001014665v1/dm6.GCA_001014665v1.net.maf.gz
#  17561357 Nov 15 16:05 mafLinks/GCA_001014675v1/dm6.GCA_001014675v1.net.maf.gz
#   9363350 Nov 15 16:13 mafLinks/GCA_001014815v1/dm6.GCA_001014815v1.net.maf.gz
#  16788714 Nov 15 16:05 mafLinks/GCA_001014835v1/dm6.GCA_001014835v1.net.maf.gz
#  12199105 Nov 15 16:10 mafLinks/GCA_001014845v1/dm6.GCA_001014845v1.net.maf.gz
#   8625500 Nov 15 16:13 mafLinks/GCA_001014875v1/dm6.GCA_001014875v1.net.maf.gz
#  12254179 Nov 15 16:11 mafLinks/GCA_001014895v1/dm6.GCA_001014895v1.net.maf.gz
#   9857934 Nov 15 16:13 mafLinks/GCA_001014935v1/dm6.GCA_001014935v1.net.maf.gz
#  12823228 Nov 15 16:09 mafLinks/GCA_001014945v1/dm6.GCA_001014945v1.net.maf.gz
#  13463380 Nov 15 16:07 mafLinks/GCA_001015075v1/dm6.GCA_001015075v1.net.maf.gz
#  12201992 Nov 15 16:11 mafLinks/GCA_001015115v1/dm6.GCA_001015115v1.net.maf.gz
#   9823305 Nov 15 16:13 mafLinks/GCA_001015145v1/dm6.GCA_001015145v1.net.maf.gz
#  13704426 Nov 15 16:06 mafLinks/GCA_001015175v1/dm6.GCA_001015175v1.net.maf.gz
#  11708660 Nov 15 16:11 mafLinks/GCA_001015215v1/dm6.GCA_001015215v1.net.maf.gz
#  15965060 Nov 15 16:05 mafLinks/GCA_001015235v1/dm6.GCA_001015235v1.net.maf.gz
#  16384402 Nov 15 16:05 mafLinks/GCA_001017275v1/dm6.GCA_001017275v1.net.maf.gz
#  12022516 Nov 15 16:11 mafLinks/GCA_001017455v1/dm6.GCA_001017455v1.net.maf.gz
#  13697085 Nov 15 16:07 mafLinks/GCA_001017515v1/dm6.GCA_001017515v1.net.maf.gz
#   9170886 Nov 15 16:13 mafLinks/GCA_001017535v1/dm6.GCA_001017535v1.net.maf.gz
#  10584886 Nov 15 16:12 mafLinks/GCA_001047195v1/dm6.GCA_001047195v1.net.maf.gz
#  17911711 Nov 15 16:04 mafLinks/GCA_001077435v1/dm6.GCA_001077435v1.net.maf.gz
#  49485599 Nov 15 15:56 mafLinks/GCA_001245395v1/dm6.GCA_001245395v1.rbest.maf.gz
#  21375719 Nov 15 16:02 mafLinks/GCA_001735545v1/dm6.GCA_001735545v1.net.maf.gz
#  41234753 Nov 15 16:00 mafLinks/GCA_001752445v1/dm6.GCA_001752445v1.net.maf.gz
#  15454323 Nov 15 16:06 mafLinks/GCA_001932985v1/dm6.GCA_001932985v1.net.maf.gz
#  13483499 Nov 15 16:07 mafLinks/GCA_002091835v1/dm6.GCA_002091835v1.net.maf.gz
#  12099268 Nov 15 16:10 mafLinks/GCA_002091845v1/dm6.GCA_002091845v1.net.maf.gz
#  44602386 Nov 15 15:59 mafLinks/GCA_002222885v1/dm6.GCA_002222885v1.net.maf.gz
#  24789571 Nov 15 16:00 mafLinks/GCA_002237135v1/dm6.GCA_002237135v1.net.maf.gz
#  60708792 Nov 15 15:53 mafLinks/GCA_002749795v1/dm6.GCA_002749795v1.rbest.maf.gz
#  12131545 Nov 15 16:10 mafLinks/GCA_002846955v1/dm6.GCA_002846955v1.net.maf.gz
#  20804112 Nov 15 16:02 mafLinks/GCA_003055125v1/dm6.GCA_003055125v1.net.maf.gz
#  49090633 Nov 15 15:56 mafLinks/GCA_003086615v1/dm6.GCA_003086615v1.rbest.maf.gz
#  15035072 Nov 15 16:06 mafLinks/GCA_003123925v1/dm6.GCA_003123925v1.net.maf.gz
#  59544816 Nov 15 15:54 mafLinks/GCA_003185025v1/dm6.GCA_003185025v1.rbest.maf.gz
#  47697477 Nov 15 15:58 mafLinks/GCA_003285725v1/dm6.GCA_003285725v1.net.maf.gz
#  52372246 Nov 15 15:55 mafLinks/GCA_003285875v1/dm6.GCA_003285875v1.rbest.maf.gz
#  12284408 Nov 15 16:09 mafLinks/GCA_003448975v1/dm6.GCA_003448975v1.net.maf.gz
#  11332496 Nov 15 16:12 mafLinks/GCA_900005825v1/dm6.GCA_900005825v1.net.maf.gz
#  12552720 Nov 15 16:10 mafLinks/GCA_900258525v2/dm6.GCA_900258525v2.net.maf.gz
#  13791608 Nov 15 16:06 mafLinks/GCF_000209185v1/dm6.GCF_000209185v1.net.maf.gz
#  21150685 Nov 15 16:02 mafLinks/GCF_000347755v3/dm6.GCF_000347755v3.net.maf.gz
#  21927780 Nov 15 16:01 mafLinks/GCF_000699065v1/dm6.GCF_000699065v1.net.maf.gz
#  20329269 Nov 15 16:03 mafLinks/GCF_000789215v1/dm6.GCF_000789215v1.net.maf.gz
#  21430894 Nov 15 16:02 mafLinks/GCF_000806345v1/dm6.GCF_000806345v1.net.maf.gz
#  18984095 Nov 15 16:03 mafLinks/GCF_001015335v1/dm6.GCF_001015335v1.net.maf.gz
#  21649953 Nov 15 16:01 mafLinks/GCF_001188975v1/dm6.GCF_001188975v1.net.maf.gz
#  47217531 Nov 15 15:58 mafLinks/GCF_001277935v1/dm6.GCF_001277935v1.net.maf.gz
#  40745037 Nov 15 16:00 mafLinks/GCF_001654015v1/dm6.GCF_001654015v1.net.maf.gz
#  47000408 Nov 15 15:59 mafLinks/GCF_001654025v1/dm6.GCF_001654025v1.net.maf.gz
#  22163702 Nov 15 16:01 mafLinks/GCF_001687245v1/dm6.GCF_001687245v1.net.maf.gz
#  21664338 Nov 15 16:01 mafLinks/GCF_001853355v1/dm6.GCF_001853355v1.net.maf.gz
#  15501263 Nov 15 16:05 mafLinks/GCF_001876365v2/dm6.GCF_001876365v2.net.maf.gz
#  72208637 Nov 15 15:52 mafLinks/GCF_002093755v1/dm6.GCF_002093755v1.rbest.maf.gz
#  14411742 Nov 15 16:06 mafLinks/GCF_002204515v2/dm6.GCF_002204515v2.net.maf.gz
#  66132951 Nov 15 15:52 mafLinks/GCF_002217835v1/dm6.GCF_002217835v1.rbest.maf.gz
#  49994823 Nov 15 15:55 mafLinks/GCF_002780465v1/dm6.GCF_002780465v1.rbest.maf.gz
#  13857844 Dec 20  2017 mafLinks/anoGam3/dm6.anoGam3.net.maf.gz
#   8871501 Aug 29  2014 mafLinks/apiMel4/dm6.apiMel4.net.maf.gz
#  48457463 Nov  9 23:47 mafLinks/droAlb1/dm6.droAlb1.rbest.maf.gz
#  65660025 Nov  9 23:44 mafLinks/droAna3/dm6.droAna3.rbest.maf.gz
#  70896382 Nov  9 23:45 mafLinks/droBia2/dm6.droBia2.rbest.maf.gz
#  66946843 Nov  9 23:45 mafLinks/droBip2/dm6.droBip2.rbest.maf.gz
#  72144720 Nov  9 23:45 mafLinks/droEle2/dm6.droEle2.rbest.maf.gz
#  69601308 Nov  9 23:48 mafLinks/droEre2/dm6.droEre2.rbest.maf.gz
#  71922495 Nov  9 23:44 mafLinks/droEug2/dm6.droEug2.rbest.maf.gz
#  71414522 Nov  9 23:48 mafLinks/droFic2/dm6.droFic2.rbest.maf.gz
#  53423742 Nov  9 23:54 mafLinks/droGri2/dm6.droGri2.rbest.maf.gz
#  71218545 Nov  9 23:49 mafLinks/droKik2/dm6.droKik2.rbest.maf.gz
#  63273322 Nov  9 23:52 mafLinks/droMir2/dm6.droMir2.rbest.maf.gz
#  51769716 Nov  9 23:50 mafLinks/droMoj3/dm6.droMoj3.rbest.maf.gz
#  60276456 Nov  9 23:43 mafLinks/droPer1/dm6.droPer1.rbest.maf.gz
#  63548147 Nov  9 23:42 mafLinks/droPse3/dm6.droPse3.rbest.maf.gz
#  70745725 Nov  9 23:54 mafLinks/droRho2/dm6.droRho2.rbest.maf.gz
#  67360052 Nov  9 23:42 mafLinks/droSec1/dm6.droSec1.rbest.maf.gz
#  71722920 Sep 12 15:13 mafLinks/droSim2/dm6.droSim2.rbest.maf.gz
#  69744679 Nov  9 23:44 mafLinks/droSuz1/dm6.droSuz1.rbest.maf.gz
#  70738773 Nov  9 23:50 mafLinks/droTak2/dm6.droTak2.rbest.maf.gz
#  53620090 Nov  9 23:47 mafLinks/droVir3/dm6.droVir3.rbest.maf.gz
#  56015756 Nov  9 23:54 mafLinks/droWil2/dm6.droWil2.rbest.maf.gz
#  72648100 Nov  9 23:43 mafLinks/droYak3/dm6.droYak3.rbest.maf.gz
#  19994083 Aug 29  2014 mafLinks/musDom2/dm6.musDom2.net.maf.gz
#  14470342 Aug 29  2014 mafLinks/triCas2/dm6.triCas2.net.maf.gz

    mkdir /hive/data/genomes/dm6/bed/multiz124way/mafSplit
    cd /hive/data/genomes/dm6/bed/multiz124way/mafSplit

    #	mafSplitPos splits on gaps or repeat areas that will not have
    #	any chains, approx 5 Mbp intervals, gaps at least 10,000
    mafSplitPos -minGap=10000 dm6 5 stdout | sort -u \
	| sort -k1,1 -k2,2n > mafSplit.bed
    #   see also multiz124way.txt for more discussion of this procedure

    #	run a kluster job to split them all
    ssh ku
    cd /hive/data/genomes/dm6/bed/multiz124way/mafSplit

    printf '#!/bin/csh -ef
set G = $1
set M = $2
mkdir -p $G
pushd $G > /dev/null
if ( -s dm6_${M}.00.maf ) then
    /bin/rm -f dm6_${M}.*.maf
endif
/cluster/bin/x86_64/mafSplit ../mafSplit.bed dm6_ ../../mafLinks/${G}/${M}.maf.gz
/bin/gzip dm6_*.maf
popd > /dev/null
' > runOne

    chmod +x runOne

    # this assumes they all have an output named:  dm6_chr2L.00.maf.gz
    printf '#LOOP
runOne $(dir1) $(file1) {check out exists+ $(dir1)/dm6_chr2L.00.maf.gz}
#ENDLOOP
' > template

    find ../mafLinks | grep "maf.gz" |  awk -F'/' '{printf "%s/%s\n", $3,$4}' \
      | sed -e 's/.maf.gz//;' > maf.list
    # should be 1 less than the number of species:
    wc -l maf.list
    # 123 maf.list

    gensub2 maf.list single template jobList
    para create jobList
    para try ... check ... push ... etc...
# Completed: 123 of 123 jobs
# CPU time in finished jobs:       4155s      69.26m     1.15h    0.05d  0.000 y
# IO & Wait Time:                   545s       9.08m     0.15h    0.01d  0.000 y
# Average job time:                  38s       0.64m     0.01h    0.00d
# Longest finished job:             100s       1.67m     0.03h    0.00d
# Submission to last job:           170s       2.83m     0.05h    0.00d

    # construct a list of all possible maf file names.
    # they do not all exist in each of the species directories
    find . -type f | grep "maf.gz" | wc -l
    # 28064
    find . -type f | grep ".maf.gz$" | xargs -L 1 basename | sort -u \
        > run.maf.list
    wc -l run.maf.list
    # 752 run.maf.list

    # number of chroms with data:
    awk -F'.' '{print $1}' run.maf.list  | sed -e 's/dm6_//;' \
      | sort | uniq -c | sort -n | wc -l
    #  730

    mkdir /hive/data/genomes/dm6/bed/multiz124way/splitRun
    cd /hive/data/genomes/dm6/bed/multiz124way/splitRun
    mkdir maf run
    cd run
    mkdir penn
    cp -p /cluster/bin/penn/multiz.2009-01-21_patched/multiz penn
    cp -p /cluster/bin/penn/multiz.2009-01-21_patched/maf_project penn
    cp -p /cluster/bin/penn/multiz.2009-01-21_patched/autoMZ penn

    #	set the db and pairs directories here
    cat > autoMultiz.csh << '_EOF_'
#!/bin/csh -ef
set db = dm6
set c = $1
set result = $2
set run = `/bin/pwd`
set tmp = /dev/shm/$db/multiz.$c
set pairs = /hive/data/genomes/dm6/bed/multiz124way/mafSplit
/bin/rm -fr $tmp
/bin/mkdir -p $tmp
/bin/cp -p ../../tree.nh ../../species.list $tmp
pushd $tmp > /dev/null
foreach s (`/bin/sed -e "s/$db //" species.list`)
    set in = $pairs/$s/$c
    set out = $db.$s.sing.maf
    if (-e $in.gz) then
        /bin/zcat $in.gz > $out
        if (! -s $out) then
            echo "##maf version=1 scoring=autoMZ" > $out
        endif
    else if (-e $in) then
        /bin/ln -s $in $out
    else
        echo "##maf version=1 scoring=autoMZ" > $out
    endif
end
set path = ($run/penn $path); rehash
$run/penn/autoMZ + T=$tmp E=$db "`cat tree.nh`" $db.*.sing.maf $c \
        > /dev/null
popd > /dev/null
/bin/rm -f $result
/bin/cp -p $tmp/$c $result
/bin/rm -fr $tmp
/bin/rmdir --ignore-fail-on-non-empty /dev/shm/$db
'_EOF_'
# << happy emacs
    chmod +x autoMultiz.csh

    printf '#LOOP
./autoMultiz.csh $(root1) {check out line+ /hive/data/genomes/dm6/bed/multiz124way/splitRun/maf/$(root1)}
#ENDLOOP
' > template

    ln -s  ../../mafSplit/run.maf.list maf.list

    ssh ku
    cd /hive/data/genomes/dm6/bed/multiz124way/splitRun/run
    gensub2 maf.list single template jobList
    # some of these jobs get to be pretty large in memory
    para -ram=48g create jobList
    para try ... check ... push ... etc...
XXX - running - Sat Nov 17 23:26:32 PST 2018
# Completed: 688 of 688 jobs
# CPU time in finished jobs:    1054306s   17571.77m   292.86h   12.20d  0.033 y
# IO & Wait Time:                 12199s     203.31m     3.39h    0.14d  0.000 y
# Average job time:                1550s      25.84m     0.43h    0.02d
# Longest finished job:           68324s    1138.73m    18.98h    0.79d
# Submission to last job:         68589s    1143.15m    19.05h    0.79d

    # put the split maf results back together into a single per-chrom maf file
    #	eliminate duplicate comments
    ssh hgwdev
    cd /hive/data/genomes/dm6/bed/multiz124way/splitRun
    mkdir ../maf
    #	no need to save the comments since they are lost with mafAddIRows

    printf '#!/bin/csh -fe
set C = $1
if ( -s ../maf/${C}.maf.gz ) then
    rm -f ../maf/${C}.maf.gz
endif
if ( -s maf/dm6_${C}.00.maf ) then
  head -q -n 1 maf/dm6_${C}.00.maf | sort -u > ../maf/${C}.maf
  grep -h -v "^#" `ls maf/dm6_${C}.*.maf | sort -t. -k2,2n` >> ../maf/${C}.maf
  tail -q -n 1 maf/dm6_${C}.00.maf | sort -u >> ../maf/${C}.maf
else
  touch ../maf/${C}.maf
endif
' > runOne
    chmod +x runOne

    printf '#LOOP
runOne $(root1) {check out exists ../maf/$(root1).maf}
#ENDLOOP
' > template

    cut -f1 ../../../chrom.sizes > chr.list
    ssh ku
    cd /hive/data/genomes/dm6/bed/multiz124way/splitRun
    gensub2 chr.list single template jobList
    para -ram=16g create jobList
    para try ... check ... push ... etc ...
    para -maxJob=32 push
# Completed: 1870 of 1870 jobs
# CPU time in finished jobs:        188s       3.13m     0.05h    0.00d  0.000 y
# IO & Wait Time:                  4926s      82.10m     1.37h    0.06d  0.000 y
# Average job time:                   3s       0.05m     0.00h    0.00d
# Longest finished job:              45s       0.75m     0.01h    0.00d
# Submission to last job:            55s       0.92m     0.02h    0.00d

    cd /hive/data/genomes/dm6/bed/multiz124way/maf
    # about 1204 of them have empty results, they can be removed
    ls -ogrt | awk '$3 == 0' | awk '{print $NF}' | xargs rm -f

    # Load into database
    mkdir -p /gbdb/dm6/multiz124way/maf
    cd /hive/data/genomes/dm6/bed/multiz124way/maf
    ln -s `pwd`/*.maf /gbdb/dm6/multiz124way/maf/

    # this generates an immense multiz124way.tab file in the directory
    #	where it is running.  Best to run this over in scratch.
    #   This is going to take all day.
    cd /dev/shm
    time hgLoadMaf -pathPrefix=/gbdb/dm6/multiz124way/maf dm6 multiz124way
# Loaded 8235439 mafs in 666 files from /gbdb/dm6/multiz124way/maf
# real    3m57.912s

# loading the mafNet results:
# Loading multiz124wayMafNet into database
# Loaded 7571179 mafs in 730 files from /gbdb/dm6/multiz124way/mafNet
# real    4m34.952s

# Loading multiz124wayRbest into database
# loading the rBest results:
# Loaded 8256877 mafs in 703 files from /gbdb/dm6/multiz124way/rBestNet
# real    4m14.281s

    time (cat /gbdb/dm6/multiz124way/maf/*.maf \
        | hgLoadMafSummary -verbose=2 -minSize=124000 \
	-mergeGap=1500 -maxSize=200000 dm6 multiz124waySummary stdin)
# Created 1106759 summary blocks from 322119181 components and 8235439 mafs from stdin
# real    8m31.396s
# -rw-rw-r-- 1 404241647 Nov 16 13:16 multiz124way.tab
# -rw-rw-r-- 1  58329399 Nov 16 13:27 multiz124waySummary.tab
    wc -l multiz124*.tab
#   8235439 multiz124way.tab
#   1106759 multiz124waySummary.tab
    rm multiz124way*.tab

# loading the mafNet summary:
# Created 1104780 summary blocks from 312007602 components and 7571179 mafs from stdin
# real    8m32.748s
# -rw-rw-r-- 1  385646523 Nov 19 07:46 multiz124wayMafNet.tab
# -rw-rw-r-- 1   58932077 Nov 19 10:14 multiz124wayMafNetSummary.tab
    wc -l *wayMafNet*
#    7571179 multiz124wayMafNet.tab
#    1104780 multiz124wayMafNetSummary.tab

# loading the rBest summary:
    time (cat /gbdb/dm6/multiz124way/rBestNet/*.maf \
        | hgLoadMafSummary -verbose=2 -minSize=124000 \
          -mergeGap=1500 -maxSize=200000 dm6 multiz124wayRbestSummary stdin)
# Created 1104461 summary blocks from 331875476 components and 8256877 mafs from stdin
# Loading into dm6 table multiz124wayRbestSummary...
# real    8m31.914s
# -rw-rw-r-- 1  427124740 Nov 22 11:04 multiz124wayRbest.tab
# -rw-rw-r-- 1   58921089 Nov 22 11:26 multiz124wayRbestSummary.tab
    wc -l *wayRbest*
    # 8256877 multiz124wayRbest.tab
    # 1104461 multiz124wayRbestSummary.tab

#######################################################################
# GAP ANNOTATE MULTIZ124WAY MAF AND LOAD TABLES (DONE - 2017-11-03 - Hiram)
    # mafAddIRows has to be run on single chromosome maf files, it does not
    #	function correctly when more than one reference sequence
    #	are in a single file.
    mkdir -p /hive/data/genomes/dm6/bed/multiz124way/anno
    cd /hive/data/genomes/dm6/bed/multiz124way/anno

    # check for N.bed files everywhere:
    for DB in `cat ../species.list`
do
    if [ ! -s /hive/data/genomes/${DB}/${DB}.N.bed ]; then
        echo "MISS: ${DB}"
        cd /hive/data/genomes/${DB}
        twoBitInfo -nBed ${DB}.2bit ${DB}.N.bed
    else
        echo "  OK: ${DB}"
    fi
    cd /hive/data/genomes/dm6/bed/multiz124way/anno
done

    cd /hive/data/genomes/dm6/bed/multiz124way/anno
    for DB in `cat ../species.list`
do
    echo "${DB} "
    ln -s  /hive/data/genomes/${DB}/${DB}.N.bed ${DB}.bed
    echo ${DB}.bed  >> nBeds
    ln -s  /hive/data/genomes/${DB}/chrom.sizes ${DB}.len
    echo ${DB}.len  >> sizes
done
    # make sure they all are successful symLinks:
    ls -ogrtL *.bed | wc -l
    # 124

    screen -S dm6      # use a screen to control this longish job
    ssh ku
    cd /hive/data/genomes/dm6/bed/multiz124way/anno
    mkdir result

    printf '#LOOP
mafAddIRows -nBeds=nBeds $(path1) /hive/data/genomes/dm6/dm6.2bit {check out line+ result/$(file1)}
#ENDLOOP
' > template

    ls ../maf/*.maf > maf.list
    gensub2 maf.list single template jobList
    # no need to limit these jobs, there are only 358 of them
    para -ram=64g create jobList
    para try ... check ...
    para -maxJob=10 push
# Completed: 358 of 358 jobs
# CPU time in finished jobs:       5296s      88.27m     1.47h    0.06d  0.000 y
# IO & Wait Time:                   914s      15.23m     0.25h    0.01d  0.000 y
# Average job time:                  17s       0.29m     0.00h    0.00d
# Longest finished job:             404s       6.73m     0.11h    0.00d
# Submission to last job:           451s       7.52m     0.13h    0.01d

    du -hsc result
    #  156G    result

    # Load into database
    rm -f /gbdb/dm6/multiz124way/maf/*
    cd /hive/data/genomes/dm6/bed/multiz124way/anno/result

    ln -s `pwd`/*.maf /gbdb/dm6/multiz124way/maf/

    # this generates an immense multiz124way.tab file in the directory
    #	where it is running.  Best to run this over in scratch.
    cd /dev/shm
    time hgLoadMaf -pathPrefix=/gbdb/dm6/multiz124way/maf dm6 multiz124way
    # Loaded 40655883 mafs in 358 files from /gbdb/dm6/multiz124way/maf
    # real    37m27.075s

    # -rw-rw-r-- 1 21124747201 Nov  2 18:27 multiz124way.tab

    time (cat /gbdb/dm6/multiz124way/maf/*.maf \
        | hgLoadMafSummary -verbose=2 -minSize=124000 \
	-mergeGap=1500 -maxSize=200000 dm6 multiz124waySummary stdin)
# Created 4568973 summary blocks from 850984320 components and 40655883 mafs from stdin
# real    59m27.383s

# -rw-rw-r--   1 21124747201 Nov  2 18:27 multiz124way.tab
# -rw-rw-r--   1  224894681 Nov  3 08:12 multiz124waySummary.tab

    wc -l multiz124way*.tab
    # 40655883 multiz124way.tab
    #  4568973 multiz124waySummary.tab

    rm multiz124way*.tab

##############################################################################
# MULTIZ7WAY MAF FRAMES (DONE - 2017-11-03 - Hiram)
    ssh hgwdev
    mkdir /hive/data/genomes/dm6/bed/multiz124way/frames
    cd /hive/data/genomes/dm6/bed/multiz124way/frames
#   survey all the genomes to find out what kinds of gene tracks they have

    printf '#!/bin/csh -fe
foreach db (`cat ../species.list`)
    echo -n "# ${db}: "
    set tables = `hgsql $db -N -e "show tables" | egrep "Gene|ncbiRefSeq"`
    foreach table ($tables)
        if ($table == "ensGene" || $table == "refGene" || \
           $table == "ncbiRefSeq" || $table == "mgcGenes" || \
           $table == "knownGene" || $table == "xenoRefGene" ) then
           set count = `hgsql $db -N -e "select count(*) from $table"`
            echo -n "${table}: ${count}, "
        endif
    end
    echo
end
' > showGenes.csh

    chmod +x ./showGenes.csh
    time ./showGenes.csh
# dm6: ensGene: 208239, knownGene: 196838, mgcGenes: 35312, ncbiRefSeq: 159322, refGene: 74391, xenoRefGene: 186565,
# panTro5: refGene: 2901, xenoRefGene: 232448,
# panPan2: ncbiRefSeq: 59356, refGene: 1124, xenoRefGene: 222742,
# gorGor5: refGene: 444, xenoRefGene: 3150124,
# ponAbe2: ensGene: 29447, refGene: 3572, xenoRefGene: 329566,
# nomLeu3: xenoRefGene: 220286,
# rheMac8: ensGene: 56743, refGene: 6481, xenoRefGene: 223255,
# macFas5: refGene: 2164, xenoRefGene: 314695,
# macNem1: refGene: 64, xenoRefGene: 316886,
# cerAty1: refGene: 450, xenoRefGene: 492070,
# papAnu3: ensGene: 31109, refGene: 513, xenoRefGene: 324140,
# chlSab2: ensGene: 28078, xenoRefGene: 245054,
# manLeu1: refGene: 3, xenoRefGene: 456179,
# nasLar1: xenoRefGene: 360558,
# colAng1: ncbiRefSeq: 47349, refGene: 3, xenoRefGene: 332184,
# rhiRox1: xenoRefGene: 364268,
# rhiBie1: xenoRefGene: 342566,
# calJac3: ensGene: 55116, refGene: 228, xenoRefGene: 346395,
# saiBol1: xenoRefGene: 506909,
# cebCap1: refGene: 293, xenoRefGene: 457440,
# aotNan1: refGene: 17, xenoRefGene: 471455,
# tarSyr2: xenoRefGene: 349126,
# micMur3: xenoRefGene: 224817,
# proCoq1: xenoRefGene: 449845,
# eulMac1: xenoRefGene: 427352,
# eulFla1: xenoRefGene: 434365,
# otoGar3: ensGene: 28565, xenoRefGene: 470891,
# mm10: ensGene: 103734, knownGene: 63759, mgcGenes: 212412, ncbiRefSeq: 106520, refGene: 38421, xenoRefGene: 183274,
# canFam3: ensGene: 39074, refGene: 2297, xenoRefGene: 268480,
# dasNov3: ensGene: 312423, xenoRefGene: 500914,

# real    0m1.505s

    # from that summary, use these gene sets:
    # knownGene - dm6 mm10
    # ensGene - ponAbe2 rheMac8 papAnu3 chlSab2 calJac3 otoGar3 canFam3 dasNov3
    # xenoRefGene -  panTro5 panPan2 gorGor5 nomLeu3 macFas5 macNem1 cerAty1 manLeu1 nasLar1 colAng1 rhiRox1 rhiBie1 saiBol1 cebCap1 aotNan1 tarSyr2 micMur3 proCoq1 eulMac1 eulFla1

    mkdir genes

    #   1. knownGene: dm6 mm10
    for DB in dm6 mm10
do
    hgsql -N -e "select name,chrom,strand,txStart,txEnd,cdsStart,cdsEnd,exonCount,exonStarts,exonEnds from knownGene" ${DB} \
      | genePredSingleCover stdin stdout | gzip -2c \
        > genes/${DB}.gp.gz
    genePredCheck -db=${DB} genes/${DB}.gp.gz 2>&1 | sed -e 's/^/    # /;'
done
    # checked: 21554 failed: 0
    # checked: 21100 failed: 0

    #   2. ensGene: ponAbe2 rheMac8 papAnu3 chlSab2 calJac3 otoGar3 canFam3 dasNov3
    for DB in ponAbe2 rheMac8 papAnu3 chlSab2 calJac3 otoGar3 canFam3 dasNov3
do
hgsql -N -e "select
name,chrom,strand,txStart,txEnd,cdsStart,cdsEnd,exonCount,exonStarts,exonEnds
from ensGene" ${DB} \
      | genePredSingleCover stdin stdout | gzip -2c \
        > /dev/shm/${DB}.tmp.gz
    mv /dev/shm/${DB}.tmp.gz genes/$DB.gp.gz
    echo -n "# ${DB}: "
    genePredCheck -db=${DB} genes/${DB}.gp.gz
done
# ponAbe2: checked: 20220 failed: 0
# rheMac8: checked: 20859 failed: 0
# papAnu3: checked: 19113 failed: 0
# chlSab2: checked: 19080 failed: 0
# calJac3: checked: 20827 failed: 0
# otoGar3: checked: 19472 failed: 0
# canFam3: checked: 19507 failed: 0
# dasNov3: checked: 22586 failed: 0

    #   3. xenoRefGene for panTro5 panPan2 gorGor5 nomLeu3 macFas5 macNem1 cerAty1 manLeu1 nasLar1 colAng1 rhiRox1 rhiBie1 saiBol1 cebCap1 aotNan1 tarSyr2 micMur3 proCoq1 eulMac1 eulFla1

    for DB in panTro5 panPan2 gorGor5 nomLeu3 macFas5 macNem1 cerAty1 manLeu1 nasLar1 colAng1 rhiRox1 rhiBie1 saiBol1 cebCap1 aotNan1 tarSyr2 micMur3 proCoq1 eulMac1 eulFla1
do
    hgsql -N -e "select
name,chrom,strand,txStart,txEnd,cdsStart,cdsEnd,exonCount,exonStarts,exonEnds
from xenoRefGene" ${DB} \
      | genePredSingleCover stdin stdout | gzip -2c \
        > /dev/shm/${DB}.tmp.gz
    mv /dev/shm/${DB}.tmp.gz genes/$DB.gp.gz
    echo -n "# ${DB}: "
    genePredCheck -db=${DB} genes/${DB}.gp.gz
done
# panTro5: checked: 21593 failed: 0
# panPan2: checked: 20031 failed: 0
# gorGor5: checked: 24721 failed: 0
# nomLeu3: checked: 20028 failed: 0
# macFas5: checked: 24291 failed: 0
# macNem1: checked: 24281 failed: 0
# cerAty1: checked: 27975 failed: 0
# manLeu1: checked: 27196 failed: 0
# nasLar1: checked: 291245 failed: 0
# colAng1: checked: 24558 failed: 0
# rhiRox1: checked: 26354 failed: 0
# rhiBie1: checked: 269124 failed: 0
# saiBol1: checked: 26867 failed: 0
# cebCap1: checked: 29673 failed: 0
# aotNan1: checked: 124988 failed: 0
# tarSyr2: checked: 29235 failed: 0
# micMur3: checked: 20083 failed: 0
# proCoq1: checked: 255124 failed: 0
# eulMac1: checked: 26918 failed: 0
# eulFla1: checked: 27223 failed: 0

    # verify counts for genes are reasonable:
    for T in genes/*.gz
do
    echo -n "# $T: "
    zcat $T | cut -f1 | sort | uniq -c | wc -l
done
# genes/aotNan1.gp.gz: 26592
# genes/calJac3.gp.gz: 20827
# genes/canFam3.gp.gz: 19507
# genes/cebCap1.gp.gz: 25680
# genes/cerAty1.gp.gz: 24658
# genes/chlSab2.gp.gz: 19080
# genes/colAng1.gp.gz: 22290
# genes/dasNov3.gp.gz: 22586
# genes/eulFla1.gp.gz: 24120
# genes/eulMac1.gp.gz: 23994
# genes/gorGor5.gp.gz: 22552
# genes/dm6.gp.gz: 21554
# genes/macFas5.gp.gz: 22206
# genes/macNem1.gp.gz: 22243
# genes/manLeu1.gp.gz: 24280
# genes/micMur3.gp.gz: 19472
# genes/mm10.gp.gz: 21100
# genes/nasLar1.gp.gz: 25793
# genes/nomLeu3.gp.gz: 19509
# genes/otoGar3.gp.gz: 19472
# genes/panPan2.gp.gz: 19596
# genes/panTro5.gp.gz: 20327
# genes/papAnu3.gp.gz: 19113
# genes/ponAbe2.gp.gz: 20220
# genes/proCoq1.gp.gz: 23134
# genes/rheMac8.gp.gz: 20859
# genes/rhiBie1.gp.gz: 23979
# genes/rhiRox1.gp.gz: 23570
# genes/saiBol1.gp.gz: 23863
# genes/tarSyr2.gp.gz: 25017


    # kluster job to annotate each maf file
    screen -S dm6      # manage long running procedure with screen
    ssh ku
    cd /hive/data/genomes/dm6/bed/multiz124way/frames

    printf '#!/bin/csh -fe

set C = $1
set G = $2

cat ../maf/${C}.maf | genePredToMafFrames dm6 stdin stdout \
        ${G} genes/${G}.gp.gz | gzip > parts/${C}.${G}.mafFrames.gz
' > runOne

    chmod +x runOne

    ls ../maf | sed -e "s/.maf//" > chr.list
    ls genes | sed -e "s/.gp.gz//" > gene.list

    printf '#LOOP
runOne $(root1) $(root2) {check out exists+ parts/$(root1).$(root2).mafFrames.gz}
#ENDLOOP
' > template

    mkdir parts
    gensub2 chr.list gene.list template jobList
    para -ram=64g create jobList
    para try ... check ... push
# Completed: 10740 of 10740 jobs
# CPU time in finished jobs:      39407s     656.78m    10.95h    0.46d  0.001 y
# IO & Wait Time:                 27424s     457.07m     7.62h    0.32d  0.001 y
# Average job time:                   6s       0.10m     0.00h    0.00d
# Longest finished job:             360s       6.00m     0.10h    0.00d
# Submission to last job:           881s      14.68m     0.24h    0.01d

    # collect all results into one file:
    cd /hive/data/genomes/dm6/bed/multiz124way/frames
    time find ./parts -type f | while read F
do
    echo "${F}" 1>&2
    zcat ${F}
done | sort -k1,1 -k2,2n > multiz124wayFrames.bed
    # real    2m4.953s

    # -rw-rw-r-- 1 468491708 Nov  3 10:124 multiz124wayFrames.bed

    gzip multiz124wayFrames.bed

    # verify there are frames on everything, should be 46 species:
    # (count from: ls genes | wc)
    zcat multiz124wayFrames.bed.gz | awk '{print $4}' | sort | uniq -c \
        | sed -e 's/^/# /;' > species.check.list
    wc -l species.check.list
    # 124

#  256062 aotNan1
#  246852 calJac3
#  274139 canFam3
#  251294 cebCap1
#  258355 cerAty1
#  214185 chlSab2
#  244719 colAng1
#  264484 dasNov3
#  210815 eulFla1
#  213386 eulMac1
#  2812486 gorGor5
#  209184 dm6
#  253170 macFas5
#  257891 macNem1
#  248164 manLeu1
#  215472 micMur3
#  260934 mm10
#  1812451 nasLar1
#  21241246 nomLeu3
#  249009 otoGar3
#  223118 panPan2
#  223812 panTro5
#  193979 papAnu3
#  200343 ponAbe2
#  210398 proCoq1
#  228189 rheMac8
#  239047 rhiBie1
#  223257 rhiRox1
#  248138 saiBol1
#  222251 tarSyr2

    #   load the resulting file
    ssh hgwdev
    cd /hive/data/genomes/dm6/bed/multiz124way/frames
    time hgLoadMafFrames dm6 multiz124wayFrames multiz124wayFrames.bed.gz
    #   real    1m13.122s

    hgsql -e 'select count(*) from multiz124wayFrames;' dm6
    # +----------+
    # | count(*) |
    # +----------+
    # |  70461240 |
    # +----------+

    time featureBits -countGaps dm6 multiz124wayFrames
    # 55160112 bases of 3209286105 (1.719%) in intersection
    # real    0m44.816s

    #   enable the trackDb entries:
# frames multiz124wayFrames
# irows on
    #   zoom to base level in an exon to see codon displays
    #	appears to work OK

#########################################################################
# Phylogenetic tree from 124-way (DONE - 2013-09-13 - Hiram)
    mkdir /hive/data/genomes/dm6/bed/multiz124way/4d
    cd /hive/data/genomes/dm6/bed/multiz124way/4d

    # the annotated maf's are in:
    ../anno/result/*.maf

    # using knownGene for dm6, only transcribed genes and nothing
    #	from the randoms and other misc.
    hgsql -Ne "select name,chrom,strand,txStart,txEnd,cdsStart,cdsEnd,exonCount,exonStarts,exonEnds from knownGene where cdsEnd > cdsStart;" dm6 \
      | egrep -E -v "chrM|chrUn|random|_alt" > knownGene.gp
    wc -l *.gp
    #     95199 knownGene.gp

    # verify it is only on the chroms:
    cut -f2 knownGene.gp | sort | uniq -c | sort -rn | sed -e 's/^/    # /;'
    #    7956 chr1
    #    124124 chr19
    #    6554 chr17
    #    6371 chr11
    #    61241 chr2
    #    5794 chr12
    #    5688 chr3
    #    4971 chr16
    #    4324 chr7
    #    42124 chr6
    #    4108 chr5
    #    3751 chr14
    #    3622 chr4
    #    3580 chr8
    #    3364 chr15
    #    124124 chrX
    #    2968 chr10
    #    2961 chr9
    #    2107 chr22
    #    2091 chr20
    #    1703 chr18
    #    1175 chr13
    #     935 chr21
    #     216 chrY

    genePredSingleCover knownGene.gp stdout | sort > knownGeneNR.gp
    wc -l knownGeneNR.gp
    #	191246 knownGeneNR.gp

    ssh ku
    mkdir /hive/data/genomes/dm6/bed/multiz124way/4d/run
    cd /hive/data/genomes/dm6/bed/multiz124way/4d/run
    mkdir ../mfa

    # newer versions of msa_view have a slightly different operation
    # the sed of the gp file inserts the reference species in the chr name
    cat << '_EOF_' > 4d.csh
#!/bin/csh -fe
set PHASTBIN = /cluster/bin/phast.build/cornellCVS/phast.2010-12-124/bin
set r = "/hive/data/genomes/dm6/bed/multiz124way"
set c = $1
set infile = $r/anno/result/$2
set outfile = $3
cd /dev/shm
# 'clean' maf, removes all chrom names, leaves only the db name
perl -wpe 's/^s ([^.]+)\.\S+/s $1/' $infile > $c.maf
awk -v C=$c '$2 == C {print}' $r/4d/knownGeneNR.gp | sed -e "s/\t$c\t/\tdm6.$c\t/" > $c.gp
set NL=`wc -l $c.gp| gawk '{print $1}'`
if ("$NL" != "0") then
    $PHASTBIN/msa_view --4d --features $c.gp -i MAF $c.maf -o SS > $c.ss
    $PHASTBIN/msa_view -i SS --tuple-size 1 $c.ss > $r/4d/run/$outfile
else
    echo "" > $r/4d/run/$outfile
endif
rm -f $c.gp $c.maf $c.ss
'_EOF_'
    # << happy emacs
    chmod +x 4d.csh

    ls -1S /hive/data/genomes/dm6/bed/multiz124way/anno/result/*.maf \
	| sed -e "s#.*multiz124way/anno/result/##" \
        | egrep -E -v "chrM|chrUn|random|_alt" > maf.list

    printf '#LOOP
4d.csh $(root1) $(path1) {check out line+ ../mfa/$(root1).mfa}
#ENDLOOP
' > template

    gensub2 maf.list single template jobList
    para -ram=64g create jobList
    para try ... check ... push ... etc...
    para time
# Completed: 24 of 24 jobs
# CPU time in finished jobs:       7202s     120.03m     2.00h    0.08d  0.000 y
# IO & Wait Time:                   480s       8.00m     0.13h    0.01d  0.000 y
# Average job time:                 320s       5.33m     0.09h    0.00d
# Longest finished job:             706s      11.124m     0.20h    0.01d
# Submission to last job:           718s      11.97m     0.20h    0.01d

    # combine mfa files
    ssh hgwdev
    cd /hive/data/genomes/dm6/bed/multiz124way/4d
    # verify no tiny files:
    ls -og mfa | sort -k3nr | tail -2
    #  -rw-rw-r-- 1  235884 Nov  3 11:25 chrY.mfa

    #want comma-less species.list
    time /cluster/bin/phast.build/cornellCVS/phast.2010-12-124/bin/msa_view \
	--aggregate "`cat ../species.list`" mfa/*.mfa | sed s/"> "/">"/ \
	    > 4d.all.mfa
    # real    0m3.182s

    # check they are all in there:
    grep "^>" 4d.all.mfa | wc -l
    #   124

    sed 's/[a-z][a-z]*_//g; s/:[0-9\.][0-9\.]*//g; s/;//; /^ *$/d' \
        dm6.124way.nh

    sed 's/[a-z][a-z]*_//g; s/:[0-9\.][0-9\.]*//g; s/;//; /^ *$/d' \
	../dm6.124way.nh > tree-commas.nh

    # use phyloFit to create tree model (output is phyloFit.mod)
    time /cluster/bin/phast.build/cornellCVS/phast.2010-12-124/bin/phyloFit \
	    --EM --precision MED --msa-format FASTA --subst-mod REV \
		--tree tree-commas.nh 4d.all.mfa
    #   real    8m6.444s

    mv phyloFit.mod all.mod

    grep TREE all.mod
# ((((((((((((dm6:0.0101811,panTro5:0.00256557):0.00168527,
# panPan2:0.002551249):0.00567544,gorGor5:0.00857055):0.0093291,
# ponAbe2:0.0183757):0.00328934,nomLeu3:0.022488):0.0111201,
# (((((rheMac8:0.00266214,(macFas5:0.00218171,
# macNem1:0.00424092):0.00171674):0.00606702,cerAty1:0.00671556):0.00164923,
# papAnu3:0.006911241):0.001718124,(chlSab2:0.0163497,
# manLeu1:0.00699129):0.00165863):0.00933639,((nasLar1:0.001248293,
# colAng1:0.0163932):0.00167418,(rhiRox1:0.00213201,
# rhiBie1:0.00222829):0.005124271):0.0104228):0.0214064):0.0206136,
# (((calJac3:0.0358464,saiBol1:0.0324064):0.00173657,
# cebCap1:0.0283117):0.00202114,aotNan1:0.0232387):0.0378592):0.0606754,
# tarSyr2:0.142222):0.011174,(((micMur3:0.0563648,
# proCoq1:0.0388184):0.005124425,(eulMac1:0.00218443,
# eulFla1:0.00228562):0.0410542):0.0370791,
# otoGar3:0.132725):0.0335535):0.0178619,mm10:0.344583):0.0241482,
# canFam3:0.163902):0.0880829,dasNov3:0.0880829);

    # compare these calculated lengths to what we started with

    /cluster/bin/phast/all_dists ../dm6.124way.nh  | grep dm6 \
	| sed -e "s/dm6.//;" | sort > original.dists

    grep TREE all.mod | sed -e 's/TREE: //;' \
       | /cluster/bin/phast/all_dists /dev/stdin | grep dm6 \
          | sed -e "s/dm6.//;"  | sort > dm6.dists

    # printing out the 'original', the 'new' the 'difference' and
    #    percent difference/delta
    join original.dists dm6.dists | awk '{
  printf "#\t%s\t%8.6f\t%8.6f\t%8.6f\t%8.6f\n", $1, $2, $3, $2-$3, 100*($2-$3)/$3 }'       | sort -k4n
#       panTro5 0.013390        0.012747        0.000643        5.044324
#       panPan2 0.015610        0.014424        0.001186        8.222407
#       gorGor5 0.019734        0.026112        -0.006378       -24.425551
#       ponAbe2 0.039403        0.045247        -0.005844       -12.9151243
#       nomLeu3 0.046204        0.052648        -0.006444       -12.239781
#       papAnu3 0.079626        0.080660        -0.001034       -1.281924
#       manLeu1 0.090974        0.080673        0.0101241        12.1248832
#       rhiRox1 0.075474        0.081014        -0.005540       -6.838324
#       rhiBie1 0.075474        0.081111        -0.005637       -6.949736
#       cerAty1 0.082584        0.082107        0.0004124        0.580949
#       nasLar1 0.075474        0.082467        -0.006993       -8.479756
#       rheMac8 0.079575        0.084120        -0.004545       -5.402996
#       macFas5 0.079575        0.085357        -0.005782       -6.1243903
#       macNem1 0.081584        0.087416        -0.005832       -6.671548
#       chlSab2 0.087974        0.090031        -0.002057       -2.2841249
#       colAng1 0.075574        0.0911124        -0.015603       -17.112868
#       aotNan1 0.102804        0.122992        -0.020188       -16.4140124
#       cebCap1 0.108804        0.1124086        -0.021282       -16.359946
#       saiBol1 0.087804        0.135917        -0.048113       -35.398810
#       calJac3 0.107454        0.139357        -0.031903       -22.8912401
#       eulMac1 0.190934        0.2412415        -0.056681       -22.8901248
#       eulFla1 0.190934        0.2412416        -0.056782       -22.922217
#       proCoq1 0.2124934        0.248499        -0.017565       -7.068439
#       tarSyr2 0.221294        0.264791        -0.043497       -16.426918
#       micMur3 0.236534        0.266045        -0.029511       -11.092484
#       otoGar3 0.270334        0.1240022        -0.029688       -9.895274
#       canFam3 0.332429        0.339655        -0.007226       -2.127453
#       dasNov3 0.366691        0.351919        0.0141242        4.197557
#       mm10    0.502391        0.496188        0.006203        1.250131

#########################################################################
# phastCons 124-way (DONE - 2015-05-07 - Hiram)
    # split 124way mafs into 10M chunks and generate sufficient statistics
    # files for # phastCons
    ssh ku
    mkdir -p /hive/data/genomes/dm6/bed/multiz124way/cons/ss
    mkdir -p /hive/data/genomes/dm6/bed/multiz124way/cons/msa.split
    cd /hive/data/genomes/dm6/bed/multiz124way/cons/msa.split

    cat << '_EOF_' > doSplit.csh
#!/bin/csh -ef
set c = $1
set MAF = /hive/data/genomes/dm6/bed/multiz124way/anno/result/$c.maf
set WINDOWS = /hive/data/genomes/dm6/bed/multiz124way/cons/ss/$c
set WC = `cat $MAF | wc -l`
set NL = `grep "^#" $MAF | wc -l`
if ( -s $2 ) then
    exit 0
endif
if ( -s $2.running ) then
    exit 0
endif

date >> $2.running

rm -fr $WINDOWS
mkdir $WINDOWS
pushd $WINDOWS > /dev/null
if ( $WC != $NL ) then
/cluster/bin/phast.build/cornellCVS/phast.2010-12-124/bin/msa_split \
    $MAF -i MAF -o SS -r $WINDOWS/$c -w 12400000,0 -I 1240 -B 5000
endif
popd > /dev/null
date >> $2
rm -f $2.running
'_EOF_'
    # << happy emacs
    chmod +x doSplit.csh

    cat << '_EOF_' > template
    printf '#LOOP
doSplit.csh $(root1) {check out line+ $(root1).done}
#ENDLOOP
' > template

F_' > doSplit.csh
#!/bin/csh -ef
set c = $1
set MAF = /hive/data/genomes/dm6/bed/multiz124way/anno/result/$c.maf
set WINDOWS = /hive/data/genomes/dm6/bed/multiz124way/cons/ss/$c
set WC = `cat $MAF | wc -l`
set NL = `grep "^#" $MAF | wc -l`
if ( -s $2 ) then
    exit 0
endif
if ( -s $2.running ) then
    exit 0
endif

date >> $2.running

rm -fr $WINDOWS
mkdir $WINDOWS
pushd $WINDOWS > /dev/null
if ( $WC != $NL ) then
/cluster/bin/phast.build/cornellCVS/phast.2010-12-124/bin/msa_split \
    $MAF -i MAF -o SS -r $WINDOWS/$c -w 12400000,0 -I 1240 -B 5000
endif
popd > /dev/null
date >> $2
rm -f $2.running
'_EOF_'
    # << happy emacs
    chmod +x doSplit.csh

    cat << '_EOF_' > template
#LOOP
doSplit.csh $(root1) {check out line+ $(root1).done}
#ENDLOOP

#	do the easy ones first to see some immediate results
    ls -1S -r ../../anno/result | sed -e "s/.maf//;" > maf.list
    # all can finish OK at a 64Gb memory limit
    gensub2 maf.list single template jobList
    para -ram=64g create jobList
    para try ... check ... etc
    para push
# Completed: 358 of 358 jobs
# CPU time in finished jobs:      112499s     218.32m     3.64h    0.15d  0.000 y
# IO & Wait Time:                  1841s      124.68m     0.51h    0.02d  0.000 y
# Average job time:                  42s       0.70m     0.01h    0.00d
# Longest finished job:            1393s      23.22m     0.39h    0.02d
# Submission to last job:          1468s      24.47m     0.41h    0.02d

    # Run phastCons
    #	This job is I/O intensive in its output files, beware where this
    #	takes place or do not run too many at once.
    ssh ku
    mkdir -p /hive/data/genomes/dm6/bed/multiz124way/cons/run.cons
    cd /hive/data/genomes/dm6/bed/multiz124way/cons/run.cons

    #	This is setup for multiple runs based on subsets, but only running
    #   the 'all' subset here.
    #   It triggers off of the current working directory
    #	$cwd:t which is the "grp" in this script.  Running:
    #	all and vertebrates

    cat << '_EOF_' > doPhast.csh
#!/bin/csh -fe
set PHASTBIN = /cluster/bin/phast.build/cornellCVS/phast.2010-12-124/bin
set c = $1
set f = $2
set len = $3
set cov = $4
set rho = $5
set grp = $cwd:t
set cons = /hive/data/genomes/dm6/bed/multiz124way/cons
set tmp = $cons/tmp/$f
mkdir -p $tmp
set ssSrc = $cons/ss
set useGrp = "$grp.mod"
if (-s $cons/$grp/$grp.non-inf) then
  ln -s $cons/$grp/$grp.mod $tmp
  ln -s $cons/$grp/$grp.non-inf $tmp
  ln -s $ssSrc/$c/$f.ss $tmp
else
  ln -s $ssSrc/$c/$f.ss $tmp
  ln -s $cons/$grp/$grp.mod $tmp
endif
pushd $tmp > /dev/null
if (-s $grp.non-inf) then
  $PHASTBIN/phastCons $f.ss $useGrp \
    --rho $rho --expected-length $len --target-coverage $cov --quiet \
    --not-informative `cat $grp.non-inf` \
    --seqname $c --idpref $c --most-conserved $f.bed --score > $f.pp
else
  $PHASTBIN/phastCons $f.ss $useGrp \
    --rho $rho --expected-length $len --target-coverage $cov --quiet \
    --seqname $c --idpref $c --most-conserved $f.bed --score > $f.pp
endif
popd > /dev/null
mkdir -p pp/$c bed/$c
sleep 4
touch pp/$c bed/$c
rm -f pp/$c/$f.pp
rm -f bed/$c/$f.bed
mv $tmp/$f.pp pp/$c
mv $tmp/$f.bed bed/$c
rm -fr $tmp
'_EOF_'
    # << happy emacs
    chmod +x doPhast.csh

    #	this template will serve for all runs
    #	root1 == chrom name, file1 == ss file name without .ss suffix
    printf '#LOOP
../run.cons/doPhast.csh $(root1) $(file1) 45 0.3 0.3 {check out line+ pp/$(root1)/$(file1).pp}
#ENDLOOP
' > template

    ls -1S ../ss/chr*/chr* | sed -e "s/.ss$//" > ss.list
    wc -l ss.list
    #	1337 ss.list

    # Create parasol batch and run it
    # run for all species
    cd /hive/data/genomes/dm6/bed/multiz124way/cons
    mkdir -p all
    cd all
    #	Using the .mod tree
    cp -p ../../4d/all.mod ./all.mod

    gensub2 ../run.cons/ss.list single ../run.cons/template jobList
    # beware overwhelming the cluster with these fast running high I/O jobs
    para -ram=32g create jobList
    para try ... check ...
    para -maxJob=16 push
# Completed: 1337 of 1337 jobs
# CPU time in finished jobs:      17323s     288.72m     4.81h    0.20d  0.001 y
# IO & Wait Time:                  9727s     162.11m     2.70h    0.11d  0.000 y
# Average job time:                  20s       0.34m     0.01h    0.00d
# Longest finished job:              31s       0.52m     0.01h    0.00d
# Submission to last job:           2124s       3.83m     0.06h    0.00d

    # create Most Conserved track
    cd /hive/data/genomes/dm6/bed/multiz124way/cons/all
    time cut -f1 ../../../../chrom.sizes | while read C
do
    echo $C 1>&2
    ls -d bed/${C} 2> /dev/null | while read D
    do
        cat ${D}/${C}*.bed
    done | sort -k1,1 -k2,2n \
    | awk '{printf "%s\t%d\t%d\tlod=%d\t%s\n", "'${C}'", $2, $3, $5, $5;}'
done > tmpMostConserved.bed
    # real    0m50.678s

    # -rw-rw-r--   1 101245734 Nov  3 14:20 tmpMostConserved.bed

    time /cluster/bin/scripts/lodToBedScore tmpMostConserved.bed \
        > mostConserved.bed
    # real    0m24.196s

    # -rw-rw-r--   1 103966297 Nov  3 14:21 mostConserved.bed

    # load into database
    ssh hgwdev
    cd /hive/data/genomes/dm6/bed/multiz124way/cons/all
    time hgLoadBed dm6 phastConsElements124way mostConserved.bed
    #  Read 2949865 elements of size 5 from mostConserved.bed
    #  real    0m26.263s

    #	--rho 0.3 --expected-length 45 --target-coverage 0.3
    time featureBits dm6 -enrichment knownGene:cds phastConsElements124way
# knownGene:cds 1.271%, phastConsElements124way 5.795%, both 0.874%, cover 68.73%, enrich 11.86x
# real    0m21.637s

    # Try for 5% overall cov, and 70% CDS cov
    time featureBits dm6 -enrichment refGene:cds phastConsElements124way
# refGene:cds 1.225%, phastConsElements124way 5.795%, both 0.863%, cover 70.50%, enrich 12.16x

# real    0m22.260s

    # Create merged posterier probability file and wiggle track data files
    cd /hive/data/genomes/dm6/bed/multiz124way/cons/all
    mkdir downloads

    time for D in `ls -d pp/chr* | sed -e 's#pp/##'`
do
    echo "working: $D" 1>&2
    find ./pp/${D} -type f | sed -e "s#^./##; s#\.# d #g; s#-# m #;" \
	| sort -k1,1 -k3,3n | sed -e "s# d #.#g; s# m #-#g;" | xargs cat \
        | gzip -c > downloads/${D}.phastCons124way.wigFix.gz
done
    # real    32m29.089s


    #	encode those files into wiggle data
    time (zcat downloads/*.wigFix.gz \
	| wigEncode stdin phastCons124way.wig phastCons124way.wib)
    #   Converted stdin, upper limit 1.00, lower limit 0.00
    #   real    15m40.010s

    du -hsc *.wi?
    # 2.8G    phastCons124way.wib
    # 283M    phastCons124way.wig

    #	encode into a bigWig file:
    #	(warning wigToBigWig process may be too large for memory limits
    #	in bash, to avoid the 32 Gb memory limit, set 180 Gb here:
export sizeG=188743680
ulimit -d $sizeG
ulimit -v $sizeG
    time (zcat downloads/*.wigFix.gz \
      | wigToBigWig -verbose=2 stdin \
	../../../../chrom.sizes phastCons124way.bw) > bigWig.log 2>&1
    egrep "VmPeak|real" bigWig.log
    # pid=37111: VmPeak:    33886864 kB
    # real    42m13.614s

    # -rw-rw-r--   1 70124152013 Nov  6 08:52 phastCons124way.bw


    bigWigInfo phastCons124way.bw
version: 4
isCompressed: yes
isSwapped: 0
primaryDataSize: 5,097,637,987
primaryIndexSize: 93,372,648
zoomLevels: 10
chromCount: 355
basesCovered: 2,955,660,600
mean: 0.128025
min: 0.000000
max: 1.000000
std: 0.247422

    #	if you wanted to use the bigWig file, loading bigWig table:
    #   but we don't use the bigWig file
    mkdir /gbdb/dm6/bbi
    ln -s `pwd`/phastCons124way.bw /gbdb/dm6/bbi
    hgsql dm6 -e 'drop table if exists phastCons124way; \
            create table phastCons124way (fileName varchar(255) not null); \
            insert into phastCons124way values
	("/gbdb/dm6/bbi/phastCons124way.bw");'

    # Load gbdb and database with wiggle.
    ssh hgwdev
    cd /hive/data/genomes/dm6/bed/multiz124way/cons/all
    ln -s `pwd`/phastCons124way.wib /gbdb/dm6/multiz124way/phastCons124way.wib
    time hgLoadWiggle -pathPrefix=/gbdb/dm6/multiz124way dm6 \
	phastCons124way phastCons124way.wig
    #   real    0m32.272s

    time wigTableStats.sh dm6 phastCons124way
# db.table            min max   mean       count     sumData
# dm6.phastCons124way     0 1 0.128025 2955660600 3.78397e+08
#       stdDev viewLimits
#     0.247422 viewLimits=0:1
# real    0m13.507s

    #  Create histogram to get an overview of all the data
    ssh hgwdev
    cd /hive/data/genomes/dm6/bed/multiz124way/cons/all
    time hgWiggle -doHistogram -db=dm6 \
	-hBinSize=0.001 -hBinCount=1240 -hMinVal=0.0 -verbose=2 \
	    phastCons124way > histogram.data 2>&1
    #	real    2m38.952s

    #	create plot of histogram:

    printf 'set terminal png small x000000 xffffff xc000ff x66ff66 xffff00 x00ffff font \
"/usr/share/fonts/default/Type1/n022004l.pfb"
set size 1.4, 0.8
set key left box
set grid noxtics
set grid ytics
set title " Human Hg38 Histogram phastCons124way track"
set xlabel " phastCons124way score"
set ylabel " Relative Frequency"
set y2label " Cumulative Relative Frequency (CRF)"
set y2range [0:1]
set y2tics
set yrange [0:0.02]

plot "histogram.data" using 2:5 title " RelFreq" with impulses, \
        "histogram.data" using 2:7 axes x1y2 title " CRF" with lines
' | gnuplot > histo.png

    # take a look to see if it is sane:

    display histo.png &

#########################################################################
# phyloP for 124-way (DONE - 2017-11-06 - Hiram)
#
    # split SS files into 1M chunks, this business needs smaller files
    #   to complete

    ssh ku
    mkdir /hive/data/genomes/dm6/bed/multiz124way/consPhyloP
    cd /hive/data/genomes/dm6/bed/multiz124way/consPhyloP
    mkdir ss run.split
    cd run.split

    printf '#!/bin/csh -ef
set c = $1
set MAF = /hive/data/genomes/dm6/bed/multiz124way/anno/result/$c.maf
set WINDOWS = /hive/data/genomes/dm6/bed/multiz124way/consPhyloP/ss/$c
set WC = `cat $MAF | wc -l`
set NL = `grep "^#" $MAF | wc -l`
if ( -s $2 ) then
    exit 0
endif
if ( -s $2.running ) then
    exit 0
endif

date >> $2.running

rm -fr $WINDOWS
mkdir -p $WINDOWS
pushd $WINDOWS > /dev/null
if ( $WC != $NL ) then
/cluster/bin/phast.build/cornellCVS/phast.2010-12-124/bin/msa_split \
    $MAF -i MAF -o SS -r $WINDOWS/$c -w 1000000,0 -I 1000 -B 5000
endif
popd > /dev/null
date >> $2
rm -f $2.running
' > doSplit.csh

    chmod +x doSplit.csh

    #	do the easy ones first to see some immediate results
    ls -1S -r ../../anno/result | sed -e "s/.maf//;" > maf.list

    # this needs a {check out line+ $(root1.done)} test for verification:
    printf '#LOOP
./doSplit.csh $(root1) $(root1).done
#ENDLOOP
' > template

    gensub2 maf.list single template jobList
    # all can complete successfully at the 64Gb memory limit
    para -ram=64g create jobList
    para try ... check ... push ... etc...

# Completed: 358 of 358 jobs
# CPU time in finished jobs:      13512s     225.20m     3.75h    0.16d  0.000 y
# IO & Wait Time:                  1646s      27.43m     0.46h    0.02d  0.000 y
# Average job time:                  42s       0.71m     0.01h    0.00d
# Longest finished job:            1494s      24.90m     0.41h    0.02d
# Submission to last job:          1717s      28.62m     0.48h    0.02d

    # run phyloP with score=LRT
    ssh ku
    mkdir /cluster/data/dm6/bed/multiz124way/consPhyloP
    cd /cluster/data/dm6/bed/multiz124way/consPhyloP

    mkdir run.phyloP
    cd run.phyloP
    # Adjust model file base composition background and rate matrix to be
    # representative of the chromosomes in play
    grep BACK ../../4d/all.mod
    #   BACKGROUND: 0.207173 0.3281241 0.237184 0.227343

    grep BACKGROUND ../../4d/all.mod | awk '{printf "%0.3f\n", $3 + $4}'
    #	0.565
    /cluster/bin/phast.build/cornellCVS/phast.2010-12-124/bin/modFreqs \
	../../4d/all.mod 0.565 > all.mod
    # verify, the BACKGROUND should now be paired up:
    grep BACK all.mod
    #   BACKGROUND: 0.217500 0.282500 0.282500 0.217500

    printf '#!/bin/csh -fe
set PHASTBIN = /cluster/bin/phast.build/cornellCVS/phast.2010-12-124/bin
set f = $1
set ssFile = $1:t
set out = $2
set cName = $f:h
set n = $f:r:e
set grp = $cwd:t
set cons = /hive/data/genomes/dm6/bed/multiz124way/consPhyloP
set tmp = $cons/tmp/$grp/$f
/bin/rm -fr $tmp
/bin/mkdir -p $tmp
set ssSrc = "$cons/ss/$cName/$ssFile"
set useGrp = "$grp.mod"
/bin/ln -s $cons/run.phyloP/$grp.mod $tmp
pushd $tmp > /dev/null
echo source: $ssSrc.ss
$PHASTBIN/phyloP --method LRT --mode CONACC --wig-scores --chrom $cName \
    -i SS $useGrp $ssSrc.ss > $ssFile.wigFix
popd > /dev/null
/bin/mkdir -p $out:h
sleep 4
/bin/touch $out:h
/bin/mv $tmp/$ssFile.wigFix $out
/bin/rm -fr $tmp
/bin/rmdir --ignore-fail-on-non-empty $cons/tmp/$grp
/bin/rmdir --ignore-fail-on-non-empty $cons/tmp
' > doPhyloP.csh

    chmod +x doPhyloP.csh

    # Create list of chunks
    find ../ss -type f | sed -e "s/.ss$//; s#../ss/##;" > ss.list
    # make sure the list looks good
    wc -l ss.list
    #	31248 ss.list

    # Create template file
    #	file1 == $chr/$chunk/file name without .ss suffix
    printf '#LOOP
../run.phyloP/doPhyloP.csh $(path1) {check out line+ wigFix/$(dir1)/$(file1).wigFix}
#ENDLOOP
' > template

    ######################   Running all species  #######################
    # setup run for all species
    mkdir /hive/data/genomes/dm6/bed/multiz124way/consPhyloP/all
    cd /hive/data/genomes/dm6/bed/multiz124way/consPhyloP/all
    rm -fr wigFix
    mkdir wigFix

    gensub2 ../run.phyloP/ss.list single ../run.phyloP/template jobList
    # beware overloading the cluster with these quick and high I/O jobs
    para -ram=32g create jobList
    para try ... check ...
    para -maxJob=16 push
    para time > run.time

# Completed: 31248 of 31248 jobs
# CPU time in finished jobs:     647954s   10799.23m   179.99h    7.50d  0.021 y
# IO & Wait Time:                 22374s     372.90m     6.22h    0.26d  0.001 y
# Average job time:                 203s       3.38m     0.06h    0.00d
# Longest finished job:             349s       5.82m     0.10h    0.00d
# Submission to last job:          3226s      53.124m     0.90h    0.04d

    mkdir downloads
    time for D in `ls -d wigFix/chr* | sed -e 's#wigFix/##'`
do
    echo "working: $D" 1>&2
    find ./wigFix/${D} -type f | sed -e "s#^./##; s#\.# d #g; s#-# m #;" \
	| sort -k1,1 -k3,3n | sed -e "s# d #.#g; s# m #-#g;" | xargs cat \
        | gzip -c > downloads/${D}.phyloP124way.wigFix.gz
done
    #   real    48m50.219s

    du -hsc downloads
    #   4.6G    downloads

    # check integrity of data with wigToBigWig
    time (zcat downloads/*.wigFix.gz \
	| wigToBigWig -verbose=2 stdin /hive/data/genomes/dm6/chrom.sizes \
	phyloP124way.bw) > bigWig.log 2>&1


    egrep "real|VmPeak" bigWig.log
    # pid=66292: VmPeak:    33751268 kB
    #  real    43m40.194s


    bigWigInfo phyloP124way.bw  | sed -e 's/^/# /;'
# version: 4
# isCompressed: yes
# isSwapped: 0
# primaryDataSize: 6,1244,0124,591
# primaryIndexSize: 93,404,704
# zoomLevels: 10
# chromCount: 355
# basesCovered: 2,955,660,581
# mean: 0.097833
# min: -20.000000
# max: 1.312000
# std: 0.727453

    #	encode those files into wiggle data
    time (zcat downloads/*.wigFix.gz \
	| wigEncode stdin phyloP124way.wig phyloP124way.wib)

# Converted stdin, upper limit 1.31, lower limit -20.00
# real    17m36.880s
# -rw-rw-r--   1 2955660581 Nov  6 14:10 phyloP124way.wib
# -rw-rw-r--   1  1244274846 Nov  6 14:10 phyloP124way.wig

    du -hsc *.wi?
    # 2.8G    phyloP124way.wib
    # 291M    phyloP124way.wig

    # Load gbdb and database with wiggle.
    ln -s `pwd`/phyloP124way.wib /gbdb/dm6/multiz124way/phyloP124way.wib
    time hgLoadWiggle -pathPrefix=/gbdb/dm6/multiz124way dm6 \
	phyloP124way phyloP124way.wig
    # real    0m124.538s

    # use to set trackDb.ra entries for wiggle min and max
    # and verify table is loaded correctly

    wigTableStats.sh dm6 phyloP124way
# db.table          min   max     mean       count     sumData
# dm6.phyloP124way  -20 1.312 0.0978331 2955660581 2.89162e+08
#       stdDev viewLimits
#     0.727453 viewLimits=-3.53943:1.312

    #	that range is: 20+1.312= 21.312 for hBinSize=0.021312

    #  Create histogram to get an overview of all the data
    time hgWiggle -doHistogram \
	-hBinSize=0.021312 -hBinCount=1000 -hMinVal=-20 -verbose=2 \
	    -db=dm6 phyloP124way > histogram.data 2>&1
    #   real    2m43.313s

    # xaxis range:
    grep -v chrom histogram.data | grep "^[0-9]" | ave -col=2 stdin \
	| sed -e 's/^/# /;'
# Q1 -10.9512450
# median -6.861155
# Q3 -2.1249245
# average -6.875971
# min -20.000000
# max 1.312000
# count 1248
# total -5280.745380
# standard deviation 4.757034

    # find out the range for the 2:5 graph
    grep -v chrom histogram.data | grep "^[0-9]" | ave -col=5 stdin \
      | sed -e 's/^/# /;'
# Q1 0.000000
# median 0.000001
# Q3 0.000140
# average 0.0011242
# min 0.000000
# max 0.023556
# count 1248
# total 0.999975
# standard deviation 0.003490

    #	create plot of histogram:
    printf 'set terminal png small x000000 xffffff xc000ff x66ff66 xffff00 x00ffff font \
"/usr/share/fonts/default/Type1/n022004l.pfb"
set size 1.4, 0.8
set key left box
set grid noxtics
set grid ytics
set title " Human dm6 Histogram phyloP124way track"
set xlabel " phyloP124way score"
set ylabel " Relative Frequency"
set y2label " Cumulative Relative Frequency (CRF)"
set y2range [0:1]
set y2tics
set xrange [-5:1.5]
set yrange [0:0.04]

plot "histogram.data" using 2:5 title " RelFreq" with impulses, \
        "histogram.data" using 2:7 axes x1y2 title " CRF" with lines
' | gnuplot > histo.png

    # verify it looks sane
    display histo.png &

#############################################################################
# construct download files for 124-way (TBD - 2015-04-15 - Hiram)
    mkdir /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/multiz124way
    mkdir /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/phastCons124way
    mkdir /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/phyloP124way
    mkdir /hive/data/genomes/dm6/bed/multiz124way/downloads
    cd /hive/data/genomes/dm6/bed/multiz124way/downloads
    mkdir multiz124way phastCons124way phyloP124way

    #########################################################################
    ## create upstream refGene maf files
    cd /hive/data/genomes/dm6/bed/multiz124way/downloads/multiz124way
    # bash script

#!/bin/sh
export geneTbl="refGene"
for S in 1240 2000 5000
do
    echo "making upstream${S}.maf"
    featureBits dm6 ${geneTbl}:upstream:${S} -fa=/dev/null -bed=stdout \
        | perl -wpe 's/_up[^\t]+/\t0/' | sort -k1,1 -k2,2n \
        | /cluster/bin/$MACHTYPE/mafFrags dm6 multiz124way \
                stdin stdout \
                -orgs=/hive/data/genomes/dm6/bed/multiz124way/species.list \
        | gzip -c > upstream${S}.${geneTbl}.maf.gz
    echo "done upstream${S}.${geneTbl}.maf.gz"
done

    #   real    88m40.1247s

-rw-rw-r-- 1   52659159 Nov  6 11:46 upstream1240.knownGene.maf.gz
-rw-rw-r-- 1  451126665 Nov  6 12:15 upstream2000.knownGene.maf.gz
-rw-rw-r-- 1 1080533794 Nov  6 12:55 upstream5000.knownGene.maf.gz

    ######################################################################
    ## compress the maf files
    cd /hive/data/genomes/dm6/bed/multiz124way/downloads/multiz124way
    mkdir maf
    rsync -a -P ../../anno/result/ ./maf/
    du -hsc maf/
    # 156G    maf
    cd maf
    time gzip *.maf &
    # real    135m1.784s

    du -hscL maf ../../anno/result/
    #  18G     maf

    cd maf
    md5sum *.maf.gz *.nh > md5sum.txt

    mkdir /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/multiz124way/maf
    cd maf
    ln -s `pwd`/* /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/multiz124way/maf
    cd --
    ln -s `pwd`/*.maf.gz `pwd`/*.nh `pwd`/*.txt \
         /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/multiz124way/

    ###########################################################################

    cd /hive/data/genomes/dm6/bed/multiz124way/downloads/multiz124way
    grep TREE ../../4d/all.mod | awk '{print $NF}' \
      | ~/kent/src/hg/utils/phyloTrees/asciiTree.pl /dev/stdin \
         > dm6.124way.nh
    ~/kent/src/hg/utils/phyloTrees/commonNames.sh dm6.124way.nh \
      | ~/kent/src/hg/utils/phyloTrees/asciiTree.pl /dev/stdin \
         > dm6.124way.commonNames.nh
    ~/kent/src/hg/utils/phyloTrees/scientificNames.sh dm6.124way.nh \
	| $HOME/kent/src/hg/utils/phyloTrees/asciiTree.pl /dev/stdin \
	    > dm6.124way.scientificNames.nh
    time md5sum *.nh *.maf.gz > md5sum.txt
    #   real    0m3.147s

    ln -s `pwd`/*.maf.gz `pwd`/*.nh \
        /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/multiz124way

    du -hsc ./maf ../../anno/result
    #  18G     ./maf
    # 156G    ../../anno/result

    # obtain the README.txt from dm6/multiz20way and update for this
    #   situation
    ln -s `pwd`/*.txt \
         /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/multiz124way/

    #####################################################################
    cd /hive/data/genomes/dm6/bed/multiz124way/downloads/phastCons124way

    mkdir dm6.124way.phastCons
    cd dm6.124way.phastCons
    ln -s ../../../cons/all/downloads/*.wigFix.gz .
    md5sum *.gz > md5sum.txt

    cd /hive/data/genomes/dm6/bed/multiz124way/downloads/phastCons124way
    ln -s ../../cons/all/phastCons124way.bw ./dm6.phastCons124way.bw
    ln -s ../../cons/all/all.mod ./dm6.phastCons124way.mod
    time md5sum *.mod *.bw > md5sum.txt
    #   real    0m20.354s

    # obtain the README.txt from dm6/phastCons20way and update for this
    mkdir /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/phastCons124way/dm6.124way.phastCons
    cd dm6.124way.phastCons
    ln -s `pwd`/* /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/phastCons124way/dm6.124way.phastCons

    cd ..
    #   situation
    ln -s `pwd`/*.mod `pwd`/*.bw `pwd`/*.txt \
      /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/phastCons124way

    #####################################################################
    cd /hive/data/genomes/dm6/bed/multiz124way/downloads/phyloP124way

    mkdir dm6.124way.phyloP
    cd dm6.124way.phyloP

    ln -s ../../../consPhyloP/all/downloads/*.wigFix.gz .
    md5sum *.wigFix.gz > md5sum.txt

    cd ..

    ln -s ../../consPhyloP/run.phyloP/all.mod dm6.phyloP124way.mod
    ln -s ../../consPhyloP/all/phyloP124way.bw dm6.phyloP124way.bw

    md5sum *.mod *.bw > md5sum.txt

    # obtain the README.txt from dm6/phyloP20way and update for this
    mkdir /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/phyloP124way/dm6.124way.phyloP
    cd dm6.124way.phyloP
    ln -s `pwd`/* \
/usr/local/apache/htdocs-hgdownload/goldenPath/dm6/phyloP124way/dm6.124way.phyloP

    cd ..

    #   situation
    ln -s `pwd`/*.mod `pwd`/*.bw `pwd`/*.txt \
      /usr/local/apache/htdocs-hgdownload/goldenPath/dm6/phyloP124way

#############################################################################
# hgPal downloads (DONE - 2017-11-06 - Hiram)
#   FASTA from 124-way for knownGene, refGene and knownCanonical

    ssh hgwdev
    screen -S dm6HgPal
    mkdir /hive/data/genomes/dm6/bed/multiz124way/pal
    cd /hive/data/genomes/dm6/bed/multiz124way/pal
    cat ../species.list | tr '[ ]' '[\n]' > order.list

    # this for loop can take hours on a high contig count assembly
    # it is just fine on human/dm6, just a few seconds
    export mz=multiz124way
    export gp=knownGene
    export db=dm6
    export I=0
    export D=0
    mkdir exonAA exonNuc
    for C in `sort -nk2 ../../../chrom.sizes | cut -f1`
    do
        I=`echo $I | awk '{print $1+1}'`
        D=`echo $D | awk '{print $1+1}'`
        dNum=`echo $D | awk '{printf "%03d", int($1/1240)}'`
        mkdir -p exonNuc/${dNum} > /dev/null
        mkdir -p exonAA/${dNum} > /dev/null
	echo "mafGene -chrom=$C -exons -noTrans $db $mz $gp order.list stdout | gzip -c > exonNuc/${dNum}/$C.exonNuc.fa.gz &"
	echo "mafGene -chrom=$C -exons $db $mz $gp order.list stdout | gzip -c > exonAA/${dNum}/$C.exonAA.fa.gz &"
        if [ $I -gt 16 ]; then
            echo "date"
            echo "wait"
            I=0
        fi
    done > $gp.jobs
    echo "date" >> $gp.jobs
    echo "wait" >> $gp.jobs

    time (sh -x ./$gp.jobs) > $gp.jobs.log 2>&1
    # real    79m18.323s

    export mz=multiz124way
    export gp=knownGene
    time find ./exonAA -type f | grep exonAA.fa.gz | xargs zcat \
     | gzip -c > $gp.$mz.exonAA.fa.gz
    # real    1m28.841s

    time find ./exonNuc -type f | grep exonNuc.fa.gz | xargs zcat \
     | gzip -c > $gp.$mz.exonNuc.fa.gz
    #   real    3m56.370s

    # -rw-rw-r-- 1 397928833 Nov  6 18:44 knownGene.multiz124way.exonAA.fa.gz
    # -rw-rw-r-- 1 5803124720 Nov  6 18:49 knownGene.multiz124way.exonNuc.fa.gz

    export mz=multiz124way
    export gp=knownGene
    export db=dm6
    export pd=/usr/local/apache/htdocs-hgdownload/goldenPath/$db/$mz/alignments
    mkdir -p $pd
    md5sum *.fa.gz > md5sum.txt
    ln -s `pwd`/$gp.$mz.exonAA.fa.gz $pd/$gp.exonAA.fa.gz
    ln -s `pwd`/$gp.$mz.exonNuc.fa.gz $pd/$gp.exonNuc.fa.gz
    ln -s `pwd`/md5sum.txt $pd/

    rm -rf exonAA exonNuc

#############################################################################
# wiki page for 124-way (DONE - 2017-11-06 - Hiram)
    mkdir /hive/users/hiram/bigWays/dm6.124way
    cd /hive/users/hiram/bigWays
    echo "dm6" > dm6.124way/ordered.list
    awk '{print $1}' /hive/data/genomes/dm6/bed/multiz124way/124way.distances.txt \
       >> dm6.124way/ordered.list

    # sizeStats.sh catches up the cached measurements required for data
    # in the tables.  They are usually already mostly done, only new
    # assemblies will have updates.
    ./sizeStats.sh dm6.124way/ordered.list
    # dbDb.sh constructs dm6.124way/XenTro9_124-way_conservation_alignment.html
    # may need to add new assembly references to srcReference.list and
    # urlReference.list
    ./dbDb.sh dm6 124way
    # sizeStats.pl constructs dm6.124way/XenTro9_124-way_Genome_size_statistics.html
    # this requires entries in coverage.list for new sequences
    ./sizeStats.pl dm6 124way

    # defCheck.pl constructs XenTro9_124-way_conservation_lastz_parameters.html
    ./defCheck.pl dm6 124way

    # this constructs the html pages in dm6.124way/:
# -rw-rw-r-- 1 6247 May  2 17:07 XenTro9_124-way_conservation_alignment.html
# -rw-rw-r-- 1 84124 May  2 17:09 XenTro9_124-way_Genome_size_statistics.html
# -rw-rw-r-- 1 5033 May  2 17:10 XenTro9_124-way_conservation_lastz_parameters.html

    # add those pages to the genomewiki.  Their page names are the
    # names of the .html files without the .html:
#  XenTro9_124-way_conservation_alignment
#  XenTro9_124-way_Genome_size_statistics
#  XenTro9_124-way_conservation_lastz_parameters

    # when you view the first one you enter, it will have links to the
    # missing two.

############################################################################
# pushQ readmine (DONE - 2017-11-07 - Hiram)

  cd /usr/local/apache/htdocs-hgdownload/goldenPath/dm6
  find -L `pwd`/multiz124way `pwd`/phastCons124way `pwd`/phyloP124way \
	/gbdb/dm6/multiz124way -type f \
    > /hive/data/genomes/dm6/bed/multiz124way/downloads/redmine.20216.fileList
  wc -l /hive/data/genomes/dm6/bed/multiz124way/downloads/redmine.20216.fileList
# 1450 /hive/data/genomes/dm6/bed/multiz124way/downloads/redmine.20216.fileList

  cd /hive/data/genomes/dm6/bed/multiz124way/downloads
  hgsql -e 'show tables;' dm6 | grep 124way \
	| sed -e 's/^/dm6./;' > redmine.20216.table.list

############################################################################
